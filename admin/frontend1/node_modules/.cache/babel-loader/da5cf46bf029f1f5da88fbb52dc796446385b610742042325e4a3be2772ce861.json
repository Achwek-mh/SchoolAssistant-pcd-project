{"ast":null,"code":"var _jsxFileName = \"/home/achwak/Desktop/SchoolAssistant-pcd-project/admin/frontend1/src/pages/schedules/temps.js\",\n  _s = $RefreshSig$();\n/* import '../ui.scss'\nimport axios from 'axios';\n\nimport { Row, Col, Table, Card, CardTitle, CardBody, Badge,Form,FormGroup,InputGroup,InputGroupText ,Label} from \"reactstrap\";\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport tempsService from \"../../services/temps.service\" ;\nimport Swal from 'sweetalert2';\nimport { useState ,useEffect } from \"react\";\nimport { Input } from \"reactstrap\";\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport { useAuthContext } from '../../shared/useAuthContext'; \nimport { useDataContext } from '../../hooks/useDataContext';\n \nconst Prof = () => {\n  const [searchtext,setsearchtext]=useState(\"\");\n  const [modal, setModal] = useState(false);\n  const [id, setId] = useState(null);\n  const [submitted, setSubmitted] = useState(null);\n\n  const { user } = useAuthContext()\n const { Data ,dispatch } = useDataContext()\n   const[ Json,setjson]=useState('')\n\n   const handleClasseChange = event => {\n    setClasse(event.target.value);\n  }\n\n  const handlesemestreChange = event => {\n    setsemestre(event.target.value);\n  }\n\n  const [classe, setClasse] = useState('');\n  const [semestre, setsemestre] = useState('');\n  const [emploi, setemploi] = useState(null);\n\n  const handleemploiChange = event => {\n    /\n    setemploi(event.target.files[0]);\n  };\n  const initialTutorialState = {\n    id: null,\n    classe: \"\",\n    semestre: \"\",\n\n    emploi: \"\"\n    \n   \n  };\n  const [currentUser, setCurrentUser] = useState(initialTutorialState);\n\n  const [state,setState]=useState(false)\n  const[message,setMessage] =useState('');\n\n  const toggle = () => setModal(!modal);\n  const[result,setResult]=useState([])\n useEffect(() => {\n    const fetchData = async () => {\n \n        tempsService.getemploi().then(async res=>{\n        if(res){\n\n        \n            dispatch({type: 'SET_Data', payload: res.data})\n            setjson(res.data)\n        }\n\n      })\n      .catch({})\n    }\n\n \n      fetchData()\n    \n  }, [dispatch,state])\n  const Submit =async (event) => {\n    event.preventDefault();\n    \n    \n    // Upload the emploi to the server\n    const formData = new FormData();\n    formData.append('emploi', emploi);\n\n\n   await axios.post('/upload-emploi', formData)\n      .then(response => {\n        console.log(response)\n\n        console.log(response.data.message);\n        // Add a new entry to the Prof table\n        const prof = { \n          emploi: response.data.filename,\n          classe: classe,\n          semestre: semestre,\n        };\n        console.log(prof)\n        axios.post('http://localhost:5000/addemploi', prof)\n          .then(response => {\n            console.log(response.data.message);\n            // Update the list of entries from the Prof table\n            axios.get('http://localhost:5000/getemploi')\n              .then(response => {\n                console.log(response)\n                setMessage(\"The tutorial was updated successfully!\");\n                setSubmitted(true);\n                setState(!state)\n              })\n              .catch(error => {\n                console.log(error);\n              });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  setClasse('');\n  setsemestre('');\n  setemploi(null);\n\n  };\n  \n  \n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n     const student ={emploi:currentUser.emploi,classe:currentUser.classe,semestre:currentUser.semestre}\n        \n     tempsService.save(student).then(res=>{ \n          if (res){\n            console.log(res)\n     \n        setMessage(\"The tutorial was updated successfully!\");\n        setSubmitted(true);\n        setState(!state)\n      }\n    else \n  {\n  }\n })\n \n  }\n\n\n\n const editt=(data,e)=>{\n   e.preventDefault();\n  toggle() ;\n  setId(data.id);\n  setCurrentUser(data)\n\n  console.log(data.id) \n} \n\n const update=async(e)=>{\n  e.preventDefault();\n  toggle() ;\n  e.preventDefault();\n  tempsService.updateStudent(id,currentUser).then(res=>{ \n  if (res){\n  Swal.fire({ \n   \n  text:   \"le profile est mis à jour avec succées\",\n  confirmButtonText: 'Cancel',\n  icon : \"success\" ,\n  confirmButtonColor:\"#979292 \"\n\n}) \nsetMessage(\"The tutorial was updated successfully!\");\nsetState(!state)\n}})\n   .catch(e => {\n     console.log(e);\n   \n   })\n \n\n\n} \n\nconst handleInputChange = event => {\n  const { name, value } = event.target;\n  setCurrentUser({ ...currentUser, [name]: value });\n};\n\n\nconst Delete=(id,e)=>{\n  console.log(id)\n  Swal.fire({\n           text:   \"Tu est sur de supprimer ce profil ?\",\n           icon: 'warning' ,\n           showCancelButton: true,  \n   confirmButtonText: `Yes`,  \n   confirmButtonColor: \"#ff6873\", \n       \n         }).then((result) => {\n           if (result.isConfirmed) {\n \n deletee(id,e) ;   \n Swal.fire({text:   \"profil supprimé avec succées\",\n icon: 'success' ,\n confirmButtonText: `OK`, \n confirmButtonColor: \"#ff6873\",\n })         \n           } else\n           Swal.fire({text:   \"Cancelled\",\n           icon: 'error' ,\n           confirmButtonText: `OK`, \n           confirmButtonColor: \"#ff6873\",\n     })\n \n       }) \n \n \n } \n const deletee =async(tdata,e)=>{\n\n  e.preventDefault();\n  tempsService.deleteStudent(tdata.id).then(res=>{\n    if(res){\n      dispatch({type: 'DELETE_Data', payload: tdata})\n      setState(!state)\n    }\n    \n  }).catch(e => {\n    console.log(e);\n  })\n\n} \n\n  return (\n    <div>\n     \n\n    <Row>\n    \n      <Col >\n\n      <Form className=\"navbar-search navbar-search-dark \" onSubmit={Submit}>\n            <FormGroup className=\"mb-0\">\n              <div style={{borderRadius:30  ,marginTop:'10px',marginBottom:'10px',width:'300px',float:\"right\"}}>\n              <InputGroup className=\"input-group-alternative\">\n                <InputGroupText style={{backgroundColor:\"transparent\", borderColor:\"#7a7878\" }}>\n                 \n                  <AiOutlineSearch style={{color:\"#555555\"}} />\n                </InputGroupText>\n                <Input  placeholder=\"Search\" type=\"text\" style={{backgroundColor:\"transparent\", borderColor:\" #7a7878\"}}  onChange={(event)=>{setsearchtext(event.target.value)}} />\n              </InputGroup>\n              </div>\n            </FormGroup>\n       \n            <Card style ={{width:1500 ,marginLeft:'-40px'}} >\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n            <i className=\"bi bi-card-text me-2\"> </i>\n            Members\n          </CardTitle>\n          <CardBody style ={{width:1500}}>\n          <Row >\n      <Col style={{marginLeft:'80px'}}>\n        <Label>emploi:</Label>\n        <Input\n         type=\"file\" \n          name=\"emploi\"\n          id=\"emploi\"\n          accept=\"emploi/*\"\n\n          className=\"input-field\"\n\n          onChange={handleemploiChange}\n        />\n      </Col>\n      <Col>\n        <Label>Classe:</Label>\n        <Input\n          type=\"text\"\n          name=\"classe\"\n          id=\"classe\"\n          value={classe}\n          onChange={handleClasseChange}  style={{width:'250px'}}\n        />\n      </Col>\n      <Col>\n        <Label>semestre:</Label>\n        <Input\n          type=\"text\"\n          name=\"semestre\"\n          id=\"semestre\"\n\n          value={semestre}\n          onChange={handlesemestreChange} style={{width:'300px'}}\n        />\n      </Col>\n    \n       <Col>\n       <Button type=\"submit\" style={{borderRadius:30  ,marginTop:'35px',marginBottom:'10px',width:'70px',float:'flex-end'}}>OK</Button>\n\n      </Col>\n      \n    </Row>\n    </CardBody>\n    </Card>\n    </Form>\n\n    <Card style ={{width:1500 ,marginLeft:'-40px'}}>\n    <CardBody style ={{width:1550,marginLeft:'-40px'}}>\n\n            <Table className=\"no-wrap  align-left\"  responsive borderless >\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>emploi</th>\n                 \n                  <th>Name</th>\n                  <th>semestre</th>\n                  <th>Email</th>\n\n                   \n\n                  { <th>Actions</th>}  \n                \n                </tr>\n              </thead>\n            \n              \n              <tbody>\n             {Json && Json.filter((val)=>{\n                if(searchtext===\"\")\n                return val ;\n                else if (val.name.toLowerCase().includes(searchtext.toLowerCase())){\n                  return val\n                }\n              }).map((tdata, index) => ( \n                    <tr key={index}>\n                  <td>{index+1}</td> \n                    \n                  { <td>{tdata.emploi &&<> <img src={`http://localhost:5000/emplois/${tdata.emploi}`} alt=\"emploi\"  className=\"avatar rounded-circle mr-3\" style={{width:\"40px\",height:\"40px\"}} /> </>}   </td> }\n                <td>{tdata && tdata.classe}</td>\n            <td style={{width:400}}>{tdata && tdata.semestre}</td>\n\n            <td >{tdata && tdata.Email}</td>\n\n\n            \n                      <td style={{width:\"180px\",float:\"left\"}}> <><Button className =\"edit\" id=\"b5\" style={{marginTop:-2 ,float:\"right\",alignItems: 'flex-end'}}  >\n                  <i className=\"bi bi-pencil-fill\" style ={{fontSize: 20+\"px\",color:\"yellow\"}}  onClick={(e)=>editt(tdata,e) }></i>\n                  \n                \n                </Button> \n              \n                <Button id =\"b4\"   onClick={(e)=>Delete(tdata,e)}     > \n                      <span className=\"trash\">\n                      <span></span>\n                        <i></i>\n            \n                      </span>\n                    </Button> </> \n                      \n                      \n                      \n                          </td> \n                      \n                          \n                      </tr> ))} \n                      </tbody> \n           \n  \n          \n            </Table>\n\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n    \n    <Modal isOpen={modal} toggle={toggle} {...result} className=\"Modal1\"  size=\"lg\" style={{maxWidth: '2000px', width: '100%'}}>\n    <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n    <ModalBody>\n    <form\n          id=\"form\"\n          action=\"/\"\n          method=\"POST\"\n        \n        >\n    <Table borderless>\n    <thead>\n                <tr>\n                  <th className =\"th\">Name</th>\n               \n                 \n                  <th>semestre</th>\n                  <th>email</th>\n                 \n\n                \n                  \n                </tr>\n              </thead>\n            \n            \n              <tbody>\n            \n        \n          <tr>\n            <td>\n\n              <div className='inline'>\n                <Row>\n                  <Col>\n\n                  <Input \n              placeholder=\" classe\"\n              type=\"string\"\n              name=\"classe\" id=\"classe\"\n              className=\"input-field\"\n              onChange={(e) => handleInputChange(e)}\n              value={currentUser.classe}\n            />   </Col>  \n      \n\n                </Row>\n            \n          </div>\n            </td>\n            <td>\n \n            <Input  \n              placeholder=\"semestre\"\n              type=\"string\"\n              name=\"semestre\"\n              id=\"semestre\"\n              className=\"input-field\"\n              onChange={(e) => handleInputChange(e)}\n              value={currentUser.semestre}\n            />\n       \n\n      \n          </td>\n            <td>\n \n <Input \n   placeholder=\"etudiantcol\"\n   type=\"string\"\n   name=\"Email\"\n   id=\"id\"\n   className=\"input-field\"\n   onChange={(e) => handleInputChange(e)}\n   value={currentUser.Email}\n   required\n > \n                </Input>  </td>\n\n           \n    \n\n\n       \n          </tr>\n    \n      \n                  </tbody>\n                  </Table>  \n                  <Button type=\"submit\" id=\"submit-button\"  onClick={e=>update(e)} >\n            submit\n          </Button>  \n        </form>\n    </ModalBody>\n    \n  </Modal>\n    \n  </div>\n  );\n};\n\nexport default Prof;\n\n\n  */\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSwitcher = () => {\n  _s();\n  const [currentImage, setCurrentImage] = useState(0);\n  const [images, setImages] = useState([]);\n  const img = async () => {\n    const res = await fetch(\"http://localhost:5000/img\");\n    const data = await res.json();\n    setImages(data.message);\n    console.log(images);\n  };\n  useEffect(() => {\n    img();\n  }, []);\n  const handleButtonClick = () => {\n    setCurrentImage((currentImage + 1) % images.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [images.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: images[currentImage],\n      alt: \"Image\",\n      style: {\n        width: \"50vw\",\n        maxWidth: \"1000px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Switch Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageSwitcher, \"+YyDqgQHNkj2gjuqNidlWJ/TuG0=\");\n_c = ImageSwitcher;\nexport default ImageSwitcher;\nvar _c;\n$RefreshReg$(_c, \"ImageSwitcher\");","map":{"version":3,"names":["React","useState","useEffect","ImageSwitcher","currentImage","setCurrentImage","images","setImages","img","res","fetch","data","json","message","console","log","handleButtonClick","length","width","maxWidth"],"sources":["/home/achwak/Desktop/SchoolAssistant-pcd-project/admin/frontend1/src/pages/schedules/temps.js"],"sourcesContent":["/* import '../ui.scss'\nimport axios from 'axios';\n\nimport { Row, Col, Table, Card, CardTitle, CardBody, Badge,Form,FormGroup,InputGroup,InputGroupText ,Label} from \"reactstrap\";\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport tempsService from \"../../services/temps.service\" ;\nimport Swal from 'sweetalert2';\nimport { useState ,useEffect } from \"react\";\nimport { Input } from \"reactstrap\";\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport { useAuthContext } from '../../shared/useAuthContext'; \nimport { useDataContext } from '../../hooks/useDataContext';\n \nconst Prof = () => {\n  const [searchtext,setsearchtext]=useState(\"\");\n  const [modal, setModal] = useState(false);\n  const [id, setId] = useState(null);\n  const [submitted, setSubmitted] = useState(null);\n\n  const { user } = useAuthContext()\n const { Data ,dispatch } = useDataContext()\n   const[ Json,setjson]=useState('')\n\n   const handleClasseChange = event => {\n    setClasse(event.target.value);\n  }\n\n  const handlesemestreChange = event => {\n    setsemestre(event.target.value);\n  }\n\n  const [classe, setClasse] = useState('');\n  const [semestre, setsemestre] = useState('');\n  const [emploi, setemploi] = useState(null);\n\n  const handleemploiChange = event => {\n    /\n    setemploi(event.target.files[0]);\n  };\n  const initialTutorialState = {\n    id: null,\n    classe: \"\",\n    semestre: \"\",\n\n    emploi: \"\"\n    \n   \n  };\n  const [currentUser, setCurrentUser] = useState(initialTutorialState);\n\n  const [state,setState]=useState(false)\n  const[message,setMessage] =useState('');\n\n  const toggle = () => setModal(!modal);\n  const[result,setResult]=useState([])\n useEffect(() => {\n    const fetchData = async () => {\n \n        tempsService.getemploi().then(async res=>{\n        if(res){\n\n        \n            dispatch({type: 'SET_Data', payload: res.data})\n            setjson(res.data)\n        }\n\n      })\n      .catch({})\n    }\n\n \n      fetchData()\n    \n  }, [dispatch,state])\n  const Submit =async (event) => {\n    event.preventDefault();\n    \n    \n    // Upload the emploi to the server\n    const formData = new FormData();\n    formData.append('emploi', emploi);\n\n\n   await axios.post('/upload-emploi', formData)\n      .then(response => {\n        console.log(response)\n\n        console.log(response.data.message);\n        // Add a new entry to the Prof table\n        const prof = { \n          emploi: response.data.filename,\n          classe: classe,\n          semestre: semestre,\n        };\n        console.log(prof)\n        axios.post('http://localhost:5000/addemploi', prof)\n          .then(response => {\n            console.log(response.data.message);\n            // Update the list of entries from the Prof table\n            axios.get('http://localhost:5000/getemploi')\n              .then(response => {\n                console.log(response)\n                setMessage(\"The tutorial was updated successfully!\");\n                setSubmitted(true);\n                setState(!state)\n              })\n              .catch(error => {\n                console.log(error);\n              });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  setClasse('');\n  setsemestre('');\n  setemploi(null);\n\n  };\n  \n  \n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n     const student ={emploi:currentUser.emploi,classe:currentUser.classe,semestre:currentUser.semestre}\n        \n     tempsService.save(student).then(res=>{ \n          if (res){\n            console.log(res)\n     \n        setMessage(\"The tutorial was updated successfully!\");\n        setSubmitted(true);\n        setState(!state)\n      }\n    else \n  {\n  }\n })\n \n  }\n\n\n\n const editt=(data,e)=>{\n   e.preventDefault();\n  toggle() ;\n  setId(data.id);\n  setCurrentUser(data)\n\n  console.log(data.id) \n} \n\n const update=async(e)=>{\n  e.preventDefault();\n  toggle() ;\n  e.preventDefault();\n  tempsService.updateStudent(id,currentUser).then(res=>{ \n  if (res){\n  Swal.fire({ \n   \n  text:   \"le profile est mis à jour avec succées\",\n  confirmButtonText: 'Cancel',\n  icon : \"success\" ,\n  confirmButtonColor:\"#979292 \"\n\n}) \nsetMessage(\"The tutorial was updated successfully!\");\nsetState(!state)\n}})\n   .catch(e => {\n     console.log(e);\n   \n   })\n \n\n\n} \n\nconst handleInputChange = event => {\n  const { name, value } = event.target;\n  setCurrentUser({ ...currentUser, [name]: value });\n};\n\n\nconst Delete=(id,e)=>{\n  console.log(id)\n  Swal.fire({\n           text:   \"Tu est sur de supprimer ce profil ?\",\n           icon: 'warning' ,\n           showCancelButton: true,  \n   confirmButtonText: `Yes`,  \n   confirmButtonColor: \"#ff6873\", \n       \n         }).then((result) => {\n           if (result.isConfirmed) {\n \n deletee(id,e) ;   \n Swal.fire({text:   \"profil supprimé avec succées\",\n icon: 'success' ,\n confirmButtonText: `OK`, \n confirmButtonColor: \"#ff6873\",\n })         \n           } else\n           Swal.fire({text:   \"Cancelled\",\n           icon: 'error' ,\n           confirmButtonText: `OK`, \n           confirmButtonColor: \"#ff6873\",\n     })\n \n       }) \n \n \n } \n const deletee =async(tdata,e)=>{\n\n  e.preventDefault();\n  tempsService.deleteStudent(tdata.id).then(res=>{\n    if(res){\n      dispatch({type: 'DELETE_Data', payload: tdata})\n      setState(!state)\n    }\n    \n  }).catch(e => {\n    console.log(e);\n  })\n\n} \n\n  return (\n    <div>\n     \n\n    <Row>\n    \n      <Col >\n\n      <Form className=\"navbar-search navbar-search-dark \" onSubmit={Submit}>\n            <FormGroup className=\"mb-0\">\n              <div style={{borderRadius:30  ,marginTop:'10px',marginBottom:'10px',width:'300px',float:\"right\"}}>\n              <InputGroup className=\"input-group-alternative\">\n                <InputGroupText style={{backgroundColor:\"transparent\", borderColor:\"#7a7878\" }}>\n                 \n                  <AiOutlineSearch style={{color:\"#555555\"}} />\n                </InputGroupText>\n                <Input  placeholder=\"Search\" type=\"text\" style={{backgroundColor:\"transparent\", borderColor:\" #7a7878\"}}  onChange={(event)=>{setsearchtext(event.target.value)}} />\n              </InputGroup>\n              </div>\n            </FormGroup>\n       \n            <Card style ={{width:1500 ,marginLeft:'-40px'}} >\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n            <i className=\"bi bi-card-text me-2\"> </i>\n            Members\n          </CardTitle>\n          <CardBody style ={{width:1500}}>\n          <Row >\n      <Col style={{marginLeft:'80px'}}>\n        <Label>emploi:</Label>\n        <Input\n         type=\"file\" \n          name=\"emploi\"\n          id=\"emploi\"\n          accept=\"emploi/*\"\n\n          className=\"input-field\"\n\n          onChange={handleemploiChange}\n        />\n      </Col>\n      <Col>\n        <Label>Classe:</Label>\n        <Input\n          type=\"text\"\n          name=\"classe\"\n          id=\"classe\"\n          value={classe}\n          onChange={handleClasseChange}  style={{width:'250px'}}\n        />\n      </Col>\n      <Col>\n        <Label>semestre:</Label>\n        <Input\n          type=\"text\"\n          name=\"semestre\"\n          id=\"semestre\"\n\n          value={semestre}\n          onChange={handlesemestreChange} style={{width:'300px'}}\n        />\n      </Col>\n    \n       <Col>\n       <Button type=\"submit\" style={{borderRadius:30  ,marginTop:'35px',marginBottom:'10px',width:'70px',float:'flex-end'}}>OK</Button>\n\n      </Col>\n      \n    </Row>\n    </CardBody>\n    </Card>\n    </Form>\n\n    <Card style ={{width:1500 ,marginLeft:'-40px'}}>\n    <CardBody style ={{width:1550,marginLeft:'-40px'}}>\n\n            <Table className=\"no-wrap  align-left\"  responsive borderless >\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>emploi</th>\n                 \n                  <th>Name</th>\n                  <th>semestre</th>\n                  <th>Email</th>\n\n                   \n\n                  { <th>Actions</th>}  \n                \n                </tr>\n              </thead>\n            \n              \n              <tbody>\n             {Json && Json.filter((val)=>{\n                if(searchtext===\"\")\n                return val ;\n                else if (val.name.toLowerCase().includes(searchtext.toLowerCase())){\n                  return val\n                }\n              }).map((tdata, index) => ( \n                    <tr key={index}>\n                  <td>{index+1}</td> \n                    \n                  { <td>{tdata.emploi &&<> <img src={`http://localhost:5000/emplois/${tdata.emploi}`} alt=\"emploi\"  className=\"avatar rounded-circle mr-3\" style={{width:\"40px\",height:\"40px\"}} /> </>}   </td> }\n                <td>{tdata && tdata.classe}</td>\n            <td style={{width:400}}>{tdata && tdata.semestre}</td>\n\n            <td >{tdata && tdata.Email}</td>\n\n\n            \n                      <td style={{width:\"180px\",float:\"left\"}}> <><Button className =\"edit\" id=\"b5\" style={{marginTop:-2 ,float:\"right\",alignItems: 'flex-end'}}  >\n                  <i className=\"bi bi-pencil-fill\" style ={{fontSize: 20+\"px\",color:\"yellow\"}}  onClick={(e)=>editt(tdata,e) }></i>\n                  \n                \n                </Button> \n              \n                <Button id =\"b4\"   onClick={(e)=>Delete(tdata,e)}     > \n                      <span className=\"trash\">\n                      <span></span>\n                        <i></i>\n            \n                      </span>\n                    </Button> </> \n                      \n                      \n                      \n                          </td> \n                      \n                          \n                      </tr> ))} \n                      </tbody> \n           \n  \n          \n            </Table>\n\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n    \n    <Modal isOpen={modal} toggle={toggle} {...result} className=\"Modal1\"  size=\"lg\" style={{maxWidth: '2000px', width: '100%'}}>\n    <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n    <ModalBody>\n    <form\n          id=\"form\"\n          action=\"/\"\n          method=\"POST\"\n        \n        >\n    <Table borderless>\n    <thead>\n                <tr>\n                  <th className =\"th\">Name</th>\n               \n                 \n                  <th>semestre</th>\n                  <th>email</th>\n                 \n\n                \n                  \n                </tr>\n              </thead>\n            \n            \n              <tbody>\n            \n        \n          <tr>\n            <td>\n\n              <div className='inline'>\n                <Row>\n                  <Col>\n\n                  <Input \n              placeholder=\" classe\"\n              type=\"string\"\n              name=\"classe\" id=\"classe\"\n              className=\"input-field\"\n              onChange={(e) => handleInputChange(e)}\n              value={currentUser.classe}\n            />   </Col>  \n      \n\n                </Row>\n            \n          </div>\n            </td>\n            <td>\n \n            <Input  \n              placeholder=\"semestre\"\n              type=\"string\"\n              name=\"semestre\"\n              id=\"semestre\"\n              className=\"input-field\"\n              onChange={(e) => handleInputChange(e)}\n              value={currentUser.semestre}\n            />\n       \n\n      \n          </td>\n            <td>\n \n <Input \n   placeholder=\"etudiantcol\"\n   type=\"string\"\n   name=\"Email\"\n   id=\"id\"\n   className=\"input-field\"\n   onChange={(e) => handleInputChange(e)}\n   value={currentUser.Email}\n   required\n > \n                </Input>  </td>\n\n           \n    \n\n\n       \n          </tr>\n    \n      \n                  </tbody>\n                  </Table>  \n                  <Button type=\"submit\" id=\"submit-button\"  onClick={e=>update(e)} >\n            submit\n          </Button>  \n        </form>\n    </ModalBody>\n    \n  </Modal>\n    \n  </div>\n  );\n};\n\nexport default Prof;\n\n\n  */\n\n\nimport React, { useState, useEffect } from \"react\";\n\nconst ImageSwitcher = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [images, setImages] = useState([]);\n\n  const img = async () => {\n    const res = await fetch(\"http://localhost:5000/img\");\n    const data = await res.json();\n    setImages(data.message);\n    console.log(images)\n  };\n\n  useEffect(() => {\n    img();\n  }, []);\n\n  const handleButtonClick = () => {\n    setCurrentImage((currentImage + 1) % images.length);\n  };\n\n  return (\n    <div>\n      {images.length > 0 && (\n        <img\n          src={images[currentImage]}\n          alt=\"Image\"\n          style={{ width: \"50vw\", maxWidth: \"1000px\" }}\n        />\n      )}\n      <button onClick={handleButtonClick}>Switch Image</button>\n    </div>\n  );\n};\n\nexport default ImageSwitcher;"],"mappingsnD,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,GAAG,GAAG,YAAY;IACtB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2BAA2B,CAAC;IACpD,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC7BL,SAAS,CAACI,IAAI,CAACE,OAAO,CAAC;IACvBC,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;EACrB,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACdM,GAAG,EAAE;EACP,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,iBAAiB,GAAG,MAAM;IAC9BX,eAAe,CAAC,CAACD,YAAY,GAAG,CAAC,IAAIE,MAAM,CAACW,MAAM,CAAC;EACrD,CAAC;EAED,oBACE;IAAA,WACGX,MAAM,CAACW,MAAM,GAAG,CAAC,iBAChB;MACE,GAAG,EAAEX,MAAM,CAACF,YAAY,CAAE;MAC1B,GAAG,EAAC,OAAO;MACX,KAAK,EAAE;QAAEc,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS;IAAE;MAAA;MAAA;MAAA;IAAA,QAEhD,eACD;MAAQ,OAAO,EAAEH,iBAAkB;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACrD;AAEV,CAAC;AAAC,GA/BIb,aAAa;AAAA,KAAbA,aAAa;AAiCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}