{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from '../shared/useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('http://localhost:5000/login', {\n      email,\n      password\n    });\n    const json = await response.json();\n    console.log(json);\n    console.log(response);\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      // update loading state\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","json","console","log","ok","localStorage","setItem","JSON","stringify","type","payload"],"sources":["/home/achwak/PCD/dev/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthContext } from '../shared/useAuthContext'\n\nexport const useLogin = () => {\n  const [error, setError] = useState(null)\n  const [isLoading, setIsLoading] = useState(null)\n  const { dispatch } = useAuthContext()\n\n  const login = async (email, password) => {\n    setIsLoading(true)\n    setError(null)\n\n    const response = await fetch('http://localhost:5000/login',{\n      email,\n      password,\n    });\n\n    const json = await response.json()\n    console.log(json)\n    console.log(response)\n\n    if (!response.ok) {\n      setIsLoading(false)\n      setError(json.error)\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json))\n\n      // update the auth context\n      dispatch({type: 'LOGIN', payload: json})\n\n      // update loading state\n      setIsLoading(false)\n    }\n  }\n\n  return { login, isLoading, error }\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEO;EAAS,CAAC,GAAGN,cAAc,EAAE;EAErC,MAAMO,KAAK,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAC;MACzDH,KAAK;MACLC;IACF,CAAC,CAAC;IAEF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IAErB,IAAI,CAACA,QAAQ,CAACK,EAAE,EAAE;MAChBV,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;IACtB;IACA,IAAIQ,QAAQ,CAACK,EAAE,EAAE;MACf;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;;MAElD;MACAN,QAAQ,CAAC;QAACc,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAET;MAAI,CAAC,CAAC;;MAExC;MACAP,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACpC,CAAC;AAAA,GAnCYD,QAAQ;EAAA,QAGED,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}