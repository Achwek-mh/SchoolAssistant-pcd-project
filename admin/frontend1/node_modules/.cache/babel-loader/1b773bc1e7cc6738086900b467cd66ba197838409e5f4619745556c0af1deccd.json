{"ast":null,"code":"/* import axios from 'axios';\nconst AUTH_API_BASE_URL = \"http://localhost:3002/api\";\n\nclass UsersService{\n\n register(user){\n    return axios.post(AUTH_API_BASE_URL +'/register', user);\n    }\n\nlogin(authCredentials) {\n  return axios.post(AUTH_API_BASE_URL+'/authenticate',authCredentials) }\n \n\nsave(user) {\n  return axios.post(AUTH_API_BASE_URL+'/save',user) }\n\nsetToken(token ){\n        localStorage.setItem('token',token);}\n        \n    \n      \ndeleteToken() {\n  localStorage.removeItem('token');}\n    \nisLoggedIn() {\n            var userPayload = this.getUserPayload();\n            if (userPayload)\n             return true\n              //userPayload.exp > Date.now() / 1000;\n            else\n              return false;\n              //return (this.getUserPayload)\n    }\nusersProfile(){\n    return axios.get(AUTH_API_BASE_URL+'/usersProfile')}  \n  \n  contactsProfile(){\n      return axios.get(AUTH_API_BASE_URL+'/contacts')}  \n      send(email,elements){\n        return axios.post(AUTH_API_BASE_URL+'/send/'+`${email}`,elements)\n      }\ngetUserPayload() {\n            var token = this.getToken();\n            if (token) {\n              var userPayload = atob(token.split('.')[1]);\n              return JSON.parse(userPayload);\n            }\n            else\n              return null;\n          }\ngetToken() {\n return localStorage.getItem('token');}\n          \ngetUserProfile(id ) {\n    return axios.get(AUTH_API_BASE_URL + `/userProfile/${id}` ); }\n\ndeleteUser (id){\n            return axios.delete(AUTH_API_BASE_URL+`/user/${id}`)\n        }\nupdate (id,user ){\n          return axios.put(AUTH_API_BASE_URL+`/user/${id}`,user)}\n        \nupdateEmail(email,user){\n            return axios.put(AUTH_API_BASE_URL+`/usersupdate/${email}`,user)}  \n\nuserProfile2(email){\nreturn axios.get(AUTH_API_BASE_URL+`/userbyemail/${email}`)}\n}\nexport default new UsersService();\n */","map":{"version":3,"names":[],"sources":["/home/achwak/PCD/dev/frontend/src/shared/auth.service.js"],"sourcesContent":["/* import axios from 'axios';\nconst AUTH_API_BASE_URL = \"http://localhost:3002/api\";\n\nclass UsersService{\n\n register(user){\n    return axios.post(AUTH_API_BASE_URL +'/register', user);\n    }\n\nlogin(authCredentials) {\n  return axios.post(AUTH_API_BASE_URL+'/authenticate',authCredentials) }\n \n\nsave(user) {\n  return axios.post(AUTH_API_BASE_URL+'/save',user) }\n\nsetToken(token ){\n        localStorage.setItem('token',token);}\n        \n    \n      \ndeleteToken() {\n  localStorage.removeItem('token');}\n    \nisLoggedIn() {\n            var userPayload = this.getUserPayload();\n            if (userPayload)\n             return true\n              //userPayload.exp > Date.now() / 1000;\n            else\n              return false;\n              //return (this.getUserPayload)\n    }\nusersProfile(){\n    return axios.get(AUTH_API_BASE_URL+'/usersProfile')}  \n  \n  contactsProfile(){\n      return axios.get(AUTH_API_BASE_URL+'/contacts')}  \n      send(email,elements){\n        return axios.post(AUTH_API_BASE_URL+'/send/'+`${email}`,elements)\n      }\ngetUserPayload() {\n            var token = this.getToken();\n            if (token) {\n              var userPayload = atob(token.split('.')[1]);\n              return JSON.parse(userPayload);\n            }\n            else\n              return null;\n          }\ngetToken() {\n return localStorage.getItem('token');}\n          \ngetUserProfile(id ) {\n    return axios.get(AUTH_API_BASE_URL + `/userProfile/${id}` ); }\n\ndeleteUser (id){\n            return axios.delete(AUTH_API_BASE_URL+`/user/${id}`)\n        }\nupdate (id,user ){\n          return axios.put(AUTH_API_BASE_URL+`/user/${id}`,user)}\n        \nupdateEmail(email,user){\n            return axios.put(AUTH_API_BASE_URL+`/usersupdate/${email}`,user)}  \n\nuserProfile2(email){\nreturn axios.get(AUTH_API_BASE_URL+`/userbyemail/${email}`)}\n}\nexport default new UsersService();\n */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}