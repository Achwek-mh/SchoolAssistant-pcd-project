{"ast":null,"code":"import axios from 'axios';\nconst AUTH_API_BASE_URL = \"http://localhost:5000\";\nclass tempsService {\n  saveemploi(emploi, classe, semestre) {\n    const userData = new FormData();\n    userData.append(\"emploi\", emploi);\n    userData.append(\"classe\", classe);\n    userData.append(\"semestre\", semestre);\n    return axios.post(AUTH_API_BASE_URL + '/addemploi', userData);\n  }\n  getemploi() {\n    return axios.get(AUTH_API_BASE_URL + `/getemploi`);\n  }\n  saveexam(type, emploi, classe, semestre) {\n    const userData = new FormData();\n    userData.append(\"type\", type);\n    userData.append(\"emploi\", emploi);\n    userData.append(\"classe\", classe);\n    userData.append(\"semestre\", semestre);\n    return axios.post(AUTH_API_BASE_URL + '/addemploiexam', userData);\n  }\n  getexam() {\n    return axios.get(AUTH_API_BASE_URL + `/getemploiexam`);\n  }\n  deleteexam(id) {\n    return axios.delete(AUTH_API_BASE_URL + `/delete/emploiexam/${id}`);\n  }\n  updateexam(id, member) {\n    return axios.put(`http://localhost:5000/update/exam/${id}`, member);\n  }\n  saveds(schedule) {\n    const userData = new FormData();\n    userData.append(\"schedule\", schedule);\n    return axios.post(AUTH_API_BASE_URL + '/addds', userData);\n  }\n  getsujetds() {\n    return axios.get(AUTH_API_BASE_URL + `/getds`);\n  }\n  deletesujetds(id) {\n    return axios.delete(AUTH_API_BASE_URL + `/delete/ds/${id}`);\n  }\n  updatesujetds(id, member) {\n    return axios.put(`http://localhost:5000/update/ds/${id}`, member);\n  }\n}\nexport default new tempsService();","map":{"version":3,"names":["axios","AUTH_API_BASE_URL","tempsService","saveemploi","emploi","classe","semestre","userData","FormData","append","post","getemploi","get","saveexam","type","getexam","deleteexam","id","delete","updateexam","member","put","saveds","schedule","getsujetds","deletesujetds","updatesujetds"],"sources":["/home/achwak/Desktop/SchoolAssistant-pcd-project/admin/frontend1/src/services/temps.service.js"],"sourcesContent":["import axios from 'axios';\nconst AUTH_API_BASE_URL = \"http://localhost:5000\";\nclass tempsService{\n    saveemploi (emploi,classe,semestre){\n        const userData = new FormData();\n        userData.append(\"emploi\", emploi);\n        userData.append(\"classe\", classe);\n        userData.append(\"semestre\", semestre);\n    \n    \n    \n        \n    \n    \n    \n    \n    \n    \n        return axios.post(AUTH_API_BASE_URL +'/addemploi', userData)\n    }\n    \ngetemploi(){\n            return axios.get(AUTH_API_BASE_URL+`/getemploi`)\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsaveexam  (type,emploi,classe,semestre){\n    const userData = new FormData();\n    userData.append(\"type\", type);\n\n    userData.append(\"emploi\", emploi);\n    userData.append(\"classe\", classe);\n    userData.append(\"semestre\", semestre);\n\n\n\n    \n\n\n\n\n\n\n    return axios.post(AUTH_API_BASE_URL +'/addemploiexam', userData)\n}\n\n    getexam(){\n        return axios.get(AUTH_API_BASE_URL+`/getemploiexam`)\n    }\n    deleteexam (id){\n                return axios.delete(AUTH_API_BASE_URL+`/delete/emploiexam/${id}`)\n            }\n    updateexam (id,member ){\n              return axios.put(`http://localhost:5000/update/exam/${id}`,member)} \n\n\nsaveds (schedule){\n                const userData = new FormData();\n                userData.append(\"schedule\", schedule);\n              \n            \n            \n            \n            \n                return axios.post(AUTH_API_BASE_URL +'/addds', userData)\n            }\n            \n                getsujetds(){\n                    return axios.get(AUTH_API_BASE_URL+`/getds`)\n                }\n                deletesujetds (id){\n                            return axios.delete(AUTH_API_BASE_URL+`/delete/ds/${id}`)\n                        }\n                updatesujetds (id,member ){\n                          return axios.put(`http://localhost:5000/update/ds/${id}`,member)} \n            \n            \n\n                        \n                        \n            }\nexport default new tempsService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,iBAAiB,GAAG,uBAAuB;AACjD,MAAMC,YAAY;EACdC,UAAU,CAAEC,MAAM,EAACC,MAAM,EAACC,QAAQ,EAAC;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;IACjCG,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC;IACjCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAWrC,OAAON,KAAK,CAACU,IAAI,CAACT,iBAAiB,GAAE,YAAY,EAAEM,QAAQ,CAAC;EAChE;EAEJI,SAAS,GAAE;IACC,OAAOX,KAAK,CAACY,GAAG,CAACX,iBAAiB,GAAE,YAAW,CAAC;EACpD;EAgBRY,QAAQ,CAAGC,IAAI,EAACV,MAAM,EAACC,MAAM,EAACC,QAAQ,EAAC;IACnC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEK,IAAI,CAAC;IAE7BP,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;IACjCG,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC;IACjCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAWrC,OAAON,KAAK,CAACU,IAAI,CAACT,iBAAiB,GAAE,gBAAgB,EAAEM,QAAQ,CAAC;EACpE;EAEIQ,OAAO,GAAE;IACL,OAAOf,KAAK,CAACY,GAAG,CAACX,iBAAiB,GAAE,gBAAe,CAAC;EACxD;EACAe,UAAU,CAAEC,EAAE,EAAC;IACH,OAAOjB,KAAK,CAACkB,MAAM,CAACjB,iBAAiB,GAAE,sBAAqBgB,EAAG,EAAC,CAAC;EACrE;EACRE,UAAU,CAAEF,EAAE,EAACG,MAAM,EAAE;IACb,OAAOpB,KAAK,CAACqB,GAAG,CAAE,qCAAoCJ,EAAG,EAAC,EAACG,MAAM,CAAC;EAAA;EAGhFE,MAAM,CAAEC,QAAQ,EAAC;IACD,MAAMhB,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEc,QAAQ,CAAC;IAMrC,OAAOvB,KAAK,CAACU,IAAI,CAACT,iBAAiB,GAAE,QAAQ,EAAEM,QAAQ,CAAC;EAC5D;EAEIiB,UAAU,GAAE;IACR,OAAOxB,KAAK,CAACY,GAAG,CAACX,iBAAiB,GAAE,QAAO,CAAC;EAChD;EACAwB,aAAa,CAAER,EAAE,EAAC;IACN,OAAOjB,KAAK,CAACkB,MAAM,CAACjB,iBAAiB,GAAE,cAAagB,EAAG,EAAC,CAAC;EAC7D;EACRS,aAAa,CAAET,EAAE,EAACG,MAAM,EAAE;IAChB,OAAOpB,KAAK,CAACqB,GAAG,CAAE,mCAAkCJ,EAAG,EAAC,EAACG,MAAM,CAAC;EAAA;AAM9E;AACZ,eAAe,IAAIlB,YAAY,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}