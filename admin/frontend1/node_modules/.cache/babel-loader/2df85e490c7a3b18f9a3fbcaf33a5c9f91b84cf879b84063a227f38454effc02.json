{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StatusBuilder = void 0;\n/**\n * A builder for gRPC status objects.\n */\nclass StatusBuilder {\n  constructor() {\n    this.code = null;\n    this.details = null;\n    this.metadata = null;\n  }\n  /**\n   * Adds a status code to the builder.\n   */\n  withCode(code) {\n    this.code = code;\n    return this;\n  }\n  /**\n   * Adds details to the builder.\n   */\n  withDetails(details) {\n    this.details = details;\n    return this;\n  }\n  /**\n   * Adds metadata to the builder.\n   */\n  withMetadata(metadata) {\n    this.metadata = metadata;\n    return this;\n  }\n  /**\n   * Builds the status object.\n   */\n  build() {\n    const status = {};\n    if (this.code !== null) {\n      status.code = this.code;\n    }\n    if (this.details !== null) {\n      status.details = this.details;\n    }\n    if (this.metadata !== null) {\n      status.metadata = this.metadata;\n    }\n    return status;\n  }\n}\nexports.StatusBuilder = StatusBuilder;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAqBA;;;AAGA,MAAaA,aAAa;EAKxBC;IACE,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB;EAEA;;;EAGAC,QAAQ,CAACH,IAAY;IACnB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,OAAO,IAAI;EACb;EAEA;;;EAGAI,WAAW,CAACH,OAAe;IACzB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,OAAO,IAAI;EACb;EAEA;;;EAGAI,YAAY,CAACH,QAAkB;IAC7B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,OAAO,IAAI;EACb;EAEA;;;EAGAI,KAAK;IACH,MAAMC,MAAM,GAA0B,EAAE;IAExC,IAAI,IAAI,CAACP,IAAI,KAAK,IAAI,EAAE;MACtBO,MAAM,CAACP,IAAI,GAAG,IAAI,CAACA,IAAI;;IAGzB,IAAI,IAAI,CAACC,OAAO,KAAK,IAAI,EAAE;MACzBM,MAAM,CAACN,OAAO,GAAG,IAAI,CAACA,OAAO;;IAG/B,IAAI,IAAI,CAACC,QAAQ,KAAK,IAAI,EAAE;MAC1BK,MAAM,CAACL,QAAQ,GAAG,IAAI,CAACA,QAAQ;;IAGjC,OAAOK,MAAM;EACf;;AAtDFC","names":["StatusBuilder","constructor","code","details","metadata","withCode","withDetails","withMetadata","build","status","exports"],"sources":["/home/achwak/node_modules/@grpc/grpc-js/src/status-builder.ts"],"sourcesContent":["/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { StatusObject } from './call-interface';\nimport { Status } from './constants';\nimport { Metadata } from './metadata';\n\n/**\n * A builder for gRPC status objects.\n */\nexport class StatusBuilder {\n  private code: Status | null;\n  private details: string | null;\n  private metadata: Metadata | null;\n\n  constructor() {\n    this.code = null;\n    this.details = null;\n    this.metadata = null;\n  }\n\n  /**\n   * Adds a status code to the builder.\n   */\n  withCode(code: Status): this {\n    this.code = code;\n    return this;\n  }\n\n  /**\n   * Adds details to the builder.\n   */\n  withDetails(details: string): this {\n    this.details = details;\n    return this;\n  }\n\n  /**\n   * Adds metadata to the builder.\n   */\n  withMetadata(metadata: Metadata): this {\n    this.metadata = metadata;\n    return this;\n  }\n\n  /**\n   * Builds the status object.\n   */\n  build(): Partial<StatusObject> {\n    const status: Partial<StatusObject> = {};\n\n    if (this.code !== null) {\n      status.code = this.code;\n    }\n\n    if (this.details !== null) {\n      status.details = this.details;\n    }\n\n    if (this.metadata !== null) {\n      status.metadata = this.metadata;\n    }\n\n    return status;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}