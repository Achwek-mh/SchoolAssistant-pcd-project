{"ast":null,"code":"var _jsxFileName = \"/home/achwak/PCD/dev/frontend/src/auth/Login.js\",\n  _s = $RefreshSig$();\nimport \"./auth.scss\";\nimport { useState, useEffect } from \"react\";\nimport { Card, CardBody, CardTitle, CardText, Label } from \"reactstrap\";\nimport { Input, InputGroup, InputGroupText } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [question, setquestion] = useState('');\n\n  /*  const render =()=>{\n     if(submitted){\n       \n       if(error !==''){\n         return <Alert  color=\"danger\">{error}</Alert>\n       } \n      \n     \n     }\n    \n   }*/\n  const handleSubmit = async e => {\n    e.preventDefault();\n    fetch('http://localhost:5000/chatbot').then(response => {\n      console.log(response.text()); //Here is the text() i said before\n      setquestion(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"part1\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \" border-0 shadow part1\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(CardText, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"hey\",\n                children: \"question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroupText, {\n                  className: \"l1\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-envelope\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 3\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 3\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  className: \"form-control-alternative textt\",\n                  type: \"question\",\n                  required: true,\n                  value: question,\n                  onChange: e => setquestion(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 4\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 4\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 4\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"WqqSiJWVZhawM/B0BC6kxJ7ok00=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","Card","CardBody","CardTitle","CardText","Label","Input","InputGroup","InputGroupText","Login","question","setquestion","handleSubmit","e","preventDefault","fetch","then","response","console","log","text","data","catch","error","target","value"],"sources":["/home/achwak/PCD/dev/frontend/src/auth/Login.js"],"sourcesContent":["import \"./auth.scss\"\nimport { useState  ,useEffect} from \"react\"\nimport { Card ,CardBody, CardTitle  ,CardText,Label   } from \"reactstrap\";\nimport { Input,InputGroup,   InputGroupText } from \"reactstrap\";\nconst Login = () => {\n  const [question , setquestion]=useState('');\n\n /*  const render =()=>{\n    if(submitted){\n      \n      if(error !==''){\n        return <Alert  color=\"danger\">{error}</Alert>\n      } \n     \n    \n    }\n   \n  }*/\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    fetch('http://localhost:5000/chatbot')\n    .then(response => {\n      console.log(response.text()) //Here is the text() i said before\n      setquestion( response.data)\n    })\n    .catch(error => {\n      console.log(error)\n    });\n  } \n\n\n\n  return (\n    <div className=\"login\">  \n    <div className=\"part1\">\n       <Card className=\" border-0 shadow part1\">\n       <CardBody>\n      \n         <CardText>  \n       \n     \n   <form onSubmit={handleSubmit}>\n\n    \n\n  <Label className=\"hey\">question</Label>\n  <InputGroup>\n  <InputGroupText className=\"l1\">\n  <i className=\"bi bi-envelope\"></i>\n                   </InputGroupText>\n   <Input   className=\"form-control-alternative textt\" type=\"question\" required value ={question} onChange={(e)=>setquestion(e.target.value)}/>\n                 \n                 </InputGroup>\n   \n   <button>login</button>\n</form>  \n</CardText >\n</CardBody>\n\n</Card></div>\n\n\n\n\n</div>\n);\n}\n\nexport default Login;  \n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAC3C,SAASC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,EAAGC,QAAQ,EAACC,KAAK,QAAU,YAAY;AACzE,SAASC,KAAK,EAACC,UAAU,EAAIC,cAAc,QAAQ,YAAY;AAAC;AAChE,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAGC,WAAW,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;;EAE5C;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClBC,KAAK,CAAC,+BAA+B,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,EAAE,CAAC,EAAC;MAC7BT,WAAW,CAAEM,QAAQ,CAACI,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EAID,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,uBACtB;MAAK,SAAS,EAAC,OAAO;MAAA,uBACnB,QAAC,IAAI;QAAC,SAAS,EAAC,wBAAwB;QAAA,uBACxC,QAAC,QAAQ;UAAA,uBAEP,QAAC,QAAQ;YAAA,uBAGf;cAAM,QAAQ,EAAEX,YAAa;cAAA,wBAI9B,QAAC,KAAK;gBAAC,SAAS,EAAC,KAAK;gBAAA,UAAC;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAAQ,eACvC,QAAC,UAAU;gBAAA,wBACX,QAAC,cAAc;kBAAC,SAAS,EAAC,IAAI;kBAAA,uBAC9B;oBAAG,SAAS,EAAC;kBAAgB;oBAAA;oBAAA;oBAAA;kBAAA;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA,QACA,eACjC,QAAC,KAAK;kBAAG,SAAS,EAAC,gCAAgC;kBAAC,IAAI,EAAC,UAAU;kBAAC,QAAQ;kBAAC,KAAK,EAAGF,QAAS;kBAAC,QAAQ,EAAGG,CAAC,IAAGF,WAAW,CAACE,CAAC,CAACW,MAAM,CAACC,KAAK;gBAAE;kBAAA;kBAAA;kBAAA;gBAAA,QAAE;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAEjH,eAE3B;gBAAA,UAAQ;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAS;YAAA;cAAA;cAAA;cAAA;YAAA;UAClB;YAAA;YAAA;YAAA;UAAA;QACK;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA;IAEJ;MAAA;MAAA;MAAA;IAAA;EAAM;IAAA;IAAA;IAAA;EAAA,QAKP;AAEN,CAAC;AAAA,GA9DKhB,KAAK;AAAA,KAALA,KAAK;AAgEX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}