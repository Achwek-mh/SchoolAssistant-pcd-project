{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.restrictControlPlaneStatusCode = void 0;\nconst constants_1 = require(\"./constants\");\nconst INAPPROPRIATE_CONTROL_PLANE_CODES = [constants_1.Status.OK, constants_1.Status.INVALID_ARGUMENT, constants_1.Status.NOT_FOUND, constants_1.Status.ALREADY_EXISTS, constants_1.Status.FAILED_PRECONDITION, constants_1.Status.ABORTED, constants_1.Status.OUT_OF_RANGE, constants_1.Status.DATA_LOSS];\nfunction restrictControlPlaneStatusCode(code, details) {\n  if (INAPPROPRIATE_CONTROL_PLANE_CODES.includes(code)) {\n    return {\n      code: constants_1.Status.INTERNAL,\n      details: `Invalid status from control plane: ${code} ${constants_1.Status[code]} ${details}`\n    };\n  } else {\n    return {\n      code,\n      details\n    };\n  }\n}\nexports.restrictControlPlaneStatusCode = restrictControlPlaneStatusCode;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA;AAEA,MAAMA,iCAAiC,GAAa,CAClDC,kBAAM,CAACC,EAAE,EACTD,kBAAM,CAACE,gBAAgB,EACvBF,kBAAM,CAACG,SAAS,EAChBH,kBAAM,CAACI,cAAc,EACrBJ,kBAAM,CAACK,mBAAmB,EAC1BL,kBAAM,CAACM,OAAO,EACdN,kBAAM,CAACO,YAAY,EACnBP,kBAAM,CAACQ,SAAS,CACjB;AAED,SAAgBC,8BAA8B,CAACC,IAAY,EAAEC,OAAe;EAC1E,IAAIZ,iCAAiC,CAACa,QAAQ,CAACF,IAAI,CAAC,EAAE;IACpD,OAAO;MACLA,IAAI,EAAEV,kBAAM,CAACa,QAAQ;MACrBF,OAAO,EAAE,sCAAsCD,IAAI,IAAIV,kBAAM,CAACU,IAAI,CAAC,IAAIC,OAAO;KAC/E;GACF,MAAM;IACL,OAAO;MAACD,IAAI;MAAEC;IAAO,CAAC;;AAE1B;AATAG","names":["INAPPROPRIATE_CONTROL_PLANE_CODES","constants_1","OK","INVALID_ARGUMENT","NOT_FOUND","ALREADY_EXISTS","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","DATA_LOSS","restrictControlPlaneStatusCode","code","details","includes","INTERNAL","exports"],"sources":["/home/achwak/node_modules/@grpc/grpc-js/src/control-plane-status.ts"],"sourcesContent":["/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Status } from './constants';\n\nconst INAPPROPRIATE_CONTROL_PLANE_CODES: Status[] = [\n  Status.OK,\n  Status.INVALID_ARGUMENT,\n  Status.NOT_FOUND,\n  Status.ALREADY_EXISTS,\n  Status.FAILED_PRECONDITION,\n  Status.ABORTED,\n  Status.OUT_OF_RANGE,\n  Status.DATA_LOSS\n]\n\nexport function restrictControlPlaneStatusCode(code: Status, details: string): {code: Status, details: string} {\n  if (INAPPROPRIATE_CONTROL_PLANE_CODES.includes(code)) {\n    return {\n      code: Status.INTERNAL,\n      details: `Invalid status from control plane: ${code} ${Status[code]} ${details}`\n    }\n  } else {\n    return {code, details};\n  }\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}