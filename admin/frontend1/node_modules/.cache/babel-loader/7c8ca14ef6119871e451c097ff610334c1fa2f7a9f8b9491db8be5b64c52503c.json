{"ast":null,"code":"import axios from 'axios';\nconst AUTH_API_BASE_URL = \"http://localhost:5000\";\nclass tempsService {\n  saveemploi(emploi, c) {\n    const userData = new FormData();\n    userData.append(\"emploi\", emploi);\n    userData.append(\"classe\", classe);\n    userData.append(\"semestre\", semestre);\n    return axios.post(AUTH_API_BASE_URL + '/addemploi', userData);\n  }\n  getemploi() {\n    return axios.get(AUTH_API_BASE_URL + `/getemploi`);\n  }\n  saveexam(schedule) {\n    const userData = new FormData();\n    userData.append(\"emploi\", emploi);\n    userData.append(\"classe\", classe);\n    userData.append(\"semestre\", semestre);\n    return axios.post(AUTH_API_BASE_URL + '/addexam', userData);\n  }\n  getexam() {\n    return axios.get(AUTH_API_BASE_URL + `/getexam`);\n  }\n  deleteexam(id) {\n    return axios.delete(AUTH_API_BASE_URL + `/delete/exam/${id}`);\n  }\n  updateexam(id, member) {\n    return axios.put(`http://localhost:5000/update/exam/${id}`, member);\n  }\n  saveds(schedule) {\n    const userData = new FormData();\n    userData.append(\"schedule\", schedule);\n    return axios.post(AUTH_API_BASE_URL + '/addds', userData);\n  }\n  getsujetds() {\n    return axios.get(AUTH_API_BASE_URL + `/getds`);\n  }\n  deletesujetds(id) {\n    return axios.delete(AUTH_API_BASE_URL + `/delete/ds/${id}`);\n  }\n  updatesujetds(id, member) {\n    return axios.put(`http://localhost:5000/update/ds/${id}`, member);\n  }\n}\nexport default new tempsService();","map":{"version":3,"names":["axios","AUTH_API_BASE_URL","tempsService","saveemploi","emploi","c","userData","FormData","append","classe","semestre","post","getemploi","get","saveexam","schedule","getexam","deleteexam","id","delete","updateexam","member","put","saveds","getsujetds","deletesujetds","updatesujetds"],"sources":["/home/achwak/Desktop/SchoolAssistant-pcd-project/admin/frontend1/src/services/temps.service.js"],"sourcesContent":["import axios from 'axios';\nconst AUTH_API_BASE_URL = \"http://localhost:5000\";\nclass tempsService{\n    saveemploi (emploi,c){\n        const userData = new FormData();\n        userData.append(\"emploi\", emploi);\n        userData.append(\"classe\", classe);\n        userData.append(\"semestre\", semestre);\n    \n    \n    \n        \n    \n    \n    \n    \n    \n    \n        return axios.post(AUTH_API_BASE_URL +'/addemploi', userData)\n    }\n    \ngetemploi(){\n            return axios.get(AUTH_API_BASE_URL+`/getemploi`)\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsaveexam (schedule){\n    const userData = new FormData();\n    userData.append(\"emploi\", emploi);\n    userData.append(\"classe\", classe);\n    userData.append(\"semestre\", semestre);\n\n\n\n    \n\n\n\n\n\n\n    return axios.post(AUTH_API_BASE_URL +'/addexam', userData)\n}\n\n    getexam(){\n        return axios.get(AUTH_API_BASE_URL+`/getexam`)\n    }\n    deleteexam (id){\n                return axios.delete(AUTH_API_BASE_URL+`/delete/exam/${id}`)\n            }\n    updateexam (id,member ){\n              return axios.put(`http://localhost:5000/update/exam/${id}`,member)} \n\n\nsaveds (schedule){\n                const userData = new FormData();\n                userData.append(\"schedule\", schedule);\n              \n            \n            \n            \n            \n                return axios.post(AUTH_API_BASE_URL +'/addds', userData)\n            }\n            \n                getsujetds(){\n                    return axios.get(AUTH_API_BASE_URL+`/getds`)\n                }\n                deletesujetds (id){\n                            return axios.delete(AUTH_API_BASE_URL+`/delete/ds/${id}`)\n                        }\n                updatesujetds (id,member ){\n                          return axios.put(`http://localhost:5000/update/ds/${id}`,member)} \n            \n            \n\n                        \n                        \n            }\nexport default new tempsService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,iBAAiB,GAAG,uBAAuB;AACjD,MAAMC,YAAY;EACdC,UAAU,CAAEC,MAAM,EAACC,CAAC,EAAC;IACjB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC;IACjCE,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEC,MAAM,CAAC;IACjCH,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEE,QAAQ,CAAC;IAWrC,OAAOV,KAAK,CAACW,IAAI,CAACV,iBAAiB,GAAE,YAAY,EAAEK,QAAQ,CAAC;EAChE;EAEJM,SAAS,GAAE;IACC,OAAOZ,KAAK,CAACa,GAAG,CAACZ,iBAAiB,GAAE,YAAW,CAAC;EACpD;EAgBRa,QAAQ,CAAEC,QAAQ,EAAC;IACf,MAAMT,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC;IACjCE,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEC,MAAM,CAAC;IACjCH,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEE,QAAQ,CAAC;IAWrC,OAAOV,KAAK,CAACW,IAAI,CAACV,iBAAiB,GAAE,UAAU,EAAEK,QAAQ,CAAC;EAC9D;EAEIU,OAAO,GAAE;IACL,OAAOhB,KAAK,CAACa,GAAG,CAACZ,iBAAiB,GAAE,UAAS,CAAC;EAClD;EACAgB,UAAU,CAAEC,EAAE,EAAC;IACH,OAAOlB,KAAK,CAACmB,MAAM,CAAClB,iBAAiB,GAAE,gBAAeiB,EAAG,EAAC,CAAC;EAC/D;EACRE,UAAU,CAAEF,EAAE,EAACG,MAAM,EAAE;IACb,OAAOrB,KAAK,CAACsB,GAAG,CAAE,qCAAoCJ,EAAG,EAAC,EAACG,MAAM,CAAC;EAAA;EAGhFE,MAAM,CAAER,QAAQ,EAAC;IACD,MAAMT,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEO,QAAQ,CAAC;IAMrC,OAAOf,KAAK,CAACW,IAAI,CAACV,iBAAiB,GAAE,QAAQ,EAAEK,QAAQ,CAAC;EAC5D;EAEIkB,UAAU,GAAE;IACR,OAAOxB,KAAK,CAACa,GAAG,CAACZ,iBAAiB,GAAE,QAAO,CAAC;EAChD;EACAwB,aAAa,CAAEP,EAAE,EAAC;IACN,OAAOlB,KAAK,CAACmB,MAAM,CAAClB,iBAAiB,GAAE,cAAaiB,EAAG,EAAC,CAAC;EAC7D;EACRQ,aAAa,CAAER,EAAE,EAACG,MAAM,EAAE;IAChB,OAAOrB,KAAK,CAACsB,GAAG,CAAE,mCAAkCJ,EAAG,EAAC,EAACG,MAAM,CAAC;EAAA;AAM9E;AACZ,eAAe,IAAInB,YAAY,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}