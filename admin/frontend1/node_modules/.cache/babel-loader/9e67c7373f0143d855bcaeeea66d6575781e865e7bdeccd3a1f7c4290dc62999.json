{"ast":null,"code":"var _jsxFileName = \"/home/achwak/Desktop/SchoolAssistant-pcd-project/admin/frontend/src/pages/profiles/student.js\",\n  _s = $RefreshSig$();\n/* import '../ui.scss'\nimport axios from 'axios';\n\nimport { Row, Col, Table, Card, CardTitle, CardBody, Badge,Form,FormGroup,InputGroup,InputGroupText ,Label} from \"reactstrap\";\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport studentsService from \"../../services/student.service\" ;\nimport Swal from 'sweetalert2';\nimport { useState ,useEffect } from \"react\";\nimport { Input } from \"reactstrap\";\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport { useAuthContext } from '../../shared/useAuthContext'; \nimport { useDataContext } from '../../hooks/useDataContext';\n \nconst Prof = () => {\n  const [searchtext,setsearchtext]=useState(\"\");\n  const [modal, setModal] = useState(false);\n  const [id, setId] = useState(null);\n  const [submitted, setSubmitted] = useState(null);\n\n  const { user } = useAuthContext()\n const { Data ,dispatch } = useDataContext()\n   const[ Json,setjson]=useState('')\n\n\n  const initialTutorialState = {\n    id: null,\n    Nom: \"\",\n    Info: \"\",\n    Email:\"\",\n\n    Image: \"\"\n    \n   \n  };\n  const [currentUser, setCurrentUser] = useState(initialTutorialState);\n\n  const [state,setState]=useState(false)\n  const[message,setMessage] =useState('');\n\n  const toggle = () => setModal(!modal);\n  const[result,setResult]=useState([])\n useEffect(() => {\n    const fetchData = async () => {\n \n        studentsService.getStudents().then(async res=>{\n        if(res){\n\n        \n            dispatch({type: 'SET_Data', payload: res.data})\n            setjson(res.data)\n        }\n\n      })\n      .catch({})\n    }\n\n \n      fetchData()\n    \n  }, [dispatch,state])\n  const Submit = event => {\n    event.preventDefault();\n    \n    // Upload the image to the server\n    const formData = new FormData();\n    formData.append('Image', currentUser.Image);\n    axios.post('http://localhost:5000/upload-image-student', formData)\n      .then(response => {\n        console.log(response.data.message);\n        // Add a new entry to the Prof table\n        const prof = { \n          Image: currentUser.Image,\n          Nom: currentUser.Nom,\n          Info: currentUser.Info,\n          Contact: currentUser.Contact,\n          Email: currentUser.Email\n        };\n        console.log(prof)\n        axios.post('http://localhost:5000/addstudent', prof)\n          .then(response => {\n            console.log(response.data.message);\n            // Update the list of entries from the Prof table\n            axios.get('http://localhost:5000/getstudent')\n              .then(response => {\n                console.log(response)\n                setMessage(\"The tutorial was updated successfully!\");\n                setSubmitted(true);\n                setState(!state)\n              })\n              .catch(error => {\n                console.log(error);\n              });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  \n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n     const student ={Image:currentUser.Image,Nom:currentUser.Nom,Info:currentUser.Info,etudiantcol:currentUser.etudiantcol,Email:currentUser.Email}\n        \n     studentsService.save(student).then(res=>{ \n          if (res){\n            console.log(res)\n     \n        setMessage(\"The tutorial was updated successfully!\");\n        setSubmitted(true);\n        setState(!state)\n      }\n    else \n  {\n  }\n })\n \n  }\n\n\n\n const editt=(data,e)=>{\n   e.preventDefault();\n  toggle() ;\n  setId(data.id);\n  setCurrentUser(data)\n\n  console.log(data.id) \n} \n\n const update=async(e)=>{\n  e.preventDefault();\n  toggle() ;\n  e.preventDefault();\n  studentsService.updateStudent(id,currentUser).then(res=>{ \n  if (res){\n  Swal.fire({ \n   \n  text:   \"le profile est mis à jour avec succées\",\n  confirmButtonText: 'Cancel',\n  icon : \"success\" ,\n  confirmButtonColor:\"#979292 \"\n\n}) \nsetMessage(\"The tutorial was updated successfully!\");\nsetState(!state)\n}})\n   .catch(e => {\n     console.log(e);\n   \n   })\n \n\n\n} \n\nconst handleInputChange = event => {\n  const { name, value } = event.target;\n  setCurrentUser({ ...currentUser, [name]: value });\n};\n\n\nconst Delete=(id,e)=>{\n  console.log(id)\n  Swal.fire({\n           text:   \"Tu est sur de supprimer ce profil ?\",\n           icon: 'warning' ,\n           showCancelButton: true,  \n   confirmButtonText: `Yes`,  \n   confirmButtonColor: \"#ff6873\", \n       \n         }).then((result) => {\n           if (result.isConfirmed) {\n \n deletee(id,e) ;   \n Swal.fire({text:   \"profil supprimé avec succées\",\n icon: 'success' ,\n confirmButtonText: `OK`, \n confirmButtonColor: \"#ff6873\",\n })         \n           } else\n           Swal.fire({text:   \"Cancelled\",\n           icon: 'error' ,\n           confirmButtonText: `OK`, \n           confirmButtonColor: \"#ff6873\",\n     })\n \n       }) \n \n \n } \n const deletee =async(tdata,e)=>{\n\n  e.preventDefault();\n  studentsService.deleteStudent(tdata.id).then(res=>{\n    if(res){\n      dispatch({type: 'DELETE_Data', payload: tdata})\n      setState(!state)\n    }\n    \n  }).catch(e => {\n    console.log(e);\n  })\n\n} \n\n  return (\n    <div>\n     \n\n    <Row>\n    \n      <Col >\n\n      <Form className=\"navbar-search navbar-search-dark \" onSubmit={(e)=>{handleSubmit(e)}}>\n            <FormGroup className=\"mb-0\">\n              <div style={{borderRadius:30  ,marginTop:'10px',marginBottom:'10px',width:'300px',float:\"right\"}}>\n              <InputGroup className=\"input-group-alternative\">\n                <InputGroupText style={{backgroundColor:\"transparent\", borderColor:\"#7a7878\" }}>\n                 \n                  <AiOutlineSearch style={{color:\"#555555\"}} />\n                </InputGroupText>\n                <Input  placeholder=\"Search\" type=\"text\" style={{backgroundColor:\"transparent\", borderColor:\" #7a7878\"}}  onChange={(event)=>{setsearchtext(event.target.value)}} />\n              </InputGroup>\n              </div>\n            </FormGroup>\n       \n            <Card style ={{width:1500 ,marginLeft:'-40px'}} >\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n            <i className=\"bi bi-card-text me-2\"> </i>\n            Members\n          </CardTitle>\n          <CardBody style ={{width:1600}}>\n          <Row onSubmit={handleSubmit}>\n      <Col style={{marginLeft:'80px'}}>\n        <Label>Image:</Label>\n        <Input\n          type=\"text\"\n          name=\"Image\"\n          id=\"Image\"\n          value={currentUser.Image}\n          onChange={(e) => handleInputChange(e)} \n        />\n      </Col>\n      <Col>\n        <Label>Name:</Label>\n        <Input\n          type=\"text\"\n          name=\"Nom\"\n          id=\"Nom\"\n\n          value={currentUser.Nom}\n          onChange={(e) => handleInputChange(e)} style={{width:'250px'}}\n        />\n      </Col>\n      <Col>\n        <Label>Info:</Label>\n        <Input\n          type=\"text\"\n          name=\"Info\"\n          id=\"Info\"\n\n          value={currentUser.Info}\n          onChange={(e) => handleInputChange(e)} style={{width:'300px'}}\n        />\n      </Col>\n     \n      <Col >\n        <Label>email:</Label>\n        <Input\n          type=\"text\"\n          name=\"Email\"\n          id=\"Email\"\n\n          value={currentUser.Email}\n          onChange={(e) => handleInputChange(e)} style={{width:'250px'}}\n        />\n      </Col>\n       <Col>\n       <Button type=\"submit\" style={{borderRadius:30  ,marginTop:'35px',marginBottom:'10px',width:'70px',float:'flex-end'}}>OK</Button>\n\n      </Col>\n      \n    </Row>\n    </CardBody>\n    </Card>\n    </Form>\n\n    <Card style ={{width:1500 ,marginLeft:'-40px'}}>\n    <CardBody style ={{width:1550,marginLeft:'-40px'}}>\n\n            <Table className=\"no-wrap  align-left\"  responsive borderless >\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Image</th>\n                 \n                  <th>Name</th>\n                  <th>Info</th>\n                  <th>Email</th>\n\n                   \n\n                  { <th>Actions</th>}  \n                \n                </tr>\n              </thead>\n            \n              \n              <tbody>\n             {Json && Json.filter((val)=>{\n                if(searchtext===\"\")\n                return val ;\n                else if (val.name.toLowerCase().includes(searchtext.toLowerCase())){\n                  return val\n                }\n              }).map((tdata, index) => ( \n                    <tr key={index}>\n                  <td>{index+1}</td> \n                    \n               <td></td>\n                <td>{tdata && tdata.Nom}</td>\n            <td style={{width:400}}>{tdata && tdata.Info}</td>\n\n            <td >{tdata && tdata.Email}</td>\n\n\n            \n                      <td style={{width:\"250px\",float:\"right\"}}> <><Button className =\"edit\" id=\"b5\" style={{marginTop:-2 ,float:\"right\",alignItems: 'flex-end'}}  >\n                  <i className=\"bi bi-pencil-fill\" style ={{fontSize: 20+\"px\",color:\"yellow\"}}  onClick={(e)=>editt(tdata,e) }></i>\n                  \n                \n                </Button> \n              \n                <Button id =\"b4\"   onClick={(e)=>Delete(tdata,e)}     > \n                      <span className=\"trash\">\n                      <span></span>\n                        <i></i>\n            \n                      </span>\n                    </Button> </> \n                      \n                      \n                      \n                          </td> \n                      \n                          \n                      </tr> ))} \n                      </tbody> \n           \n  \n          \n            </Table>\n\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n    \n    <Modal isOpen={modal} toggle={toggle} {...result} className=\"Modal1\"  size=\"lg\" style={{maxWidth: '2000px', width: '100%'}}>\n    <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n    <ModalBody>\n    <form\n          id=\"form\"\n          action=\"/\"\n          method=\"POST\"\n        \n        >\n    <Table borderless>\n    <thead>\n                <tr>\n                  <th className =\"th\">Name</th>\n               \n                 \n                  <th>info</th>\n                  <th>email</th>\n                 \n\n                \n                  \n                </tr>\n              </thead>\n            \n            \n              <tbody>\n            \n        \n          <tr>\n            <td>\n\n              <div className='inline'>\n                <Row>\n                  <Col>\n\n                  <Input \n              placeholder=\" nom\"\n              type=\"string\"\n              name=\"Nom\" id=\"Nom\"\n              className=\"input-field\"\n              onChange={(e) => handleInputChange(e)}\n              value={currentUser.Nom}\n            />   </Col>  \n      \n\n                </Row>\n            \n          </div>\n            </td>\n            <td>\n \n            <Input  \n              placeholder=\"info\"\n              type=\"string\"\n              name=\"Info\"\n              id=\"Info\"\n              className=\"input-field\"\n              onChange={(e) => handleInputChange(e)}\n              value={currentUser.Info}\n            />\n       \n\n      \n          </td>\n            <td>\n \n <Input \n   placeholder=\"etudiantcol\"\n   type=\"string\"\n   name=\"Email\"\n   id=\"id\"\n   className=\"input-field\"\n   onChange={(e) => handleInputChange(e)}\n   value={currentUser.Email}\n   required\n > \n                </Input>  </td>\n\n           \n    \n\n\n       \n          </tr>\n    \n      \n                  </tbody>\n                  </Table>  \n                  <Button type=\"submit\" id=\"submit-button\"  onClick={e=>update(e)} >\n            submit\n          </Button>  \n        </form>\n    </ModalBody>\n    \n  </Modal>\n    \n  </div>\n  );\n};\n\nexport default Prof;\n\n\n */\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadImage() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState('');\n  const initialTutorialState = {\n    id: null,\n    Nom: \"\",\n    Info: \"\",\n    Contact: \"\",\n    Email: \"\",\n    Image: \"\"\n  };\n  const [currentUser, setCurrentUser] = useState(initialTutorialState);\n  const handleImageChange = event => {\n    //setImage(event.target.files[0]);\n    setCurrentUser({\n      ...currentUser,\n      Image: event.target.files[0]\n    });\n  };\n  const handleUpload = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', currentUser.Image);\n    await axios.post('/upload-image', formData).then(res => {\n      setMessage(res.data['Done!']);\n      console.log(res);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 510,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadImage, \"b9gwvNNChuMu78bSNjhYerrqEXE=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","axios","UploadImage","image","setImage","message","setMessage","initialTutorialState","id","Nom","Info","Contact","Email","Image","currentUser","setCurrentUser","handleImageChange","event","target","files","handleUpload","preventDefault","formData","FormData","append","post","then","res","data","console","log"],"sources":["/home/achwak/Desktop/SchoolAssistant-pcd-project/admin/frontend/src/pages/profiles/student.js"],"sourcesContent":["/* import '../ui.scss'\nimport axios from 'axios';\n\nimport { Row, Col, Table, Card, CardTitle, CardBody, Badge,Form,FormGroup,InputGroup,InputGroupText ,Label} from \"reactstrap\";\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport studentsService from \"../../services/student.service\" ;\nimport Swal from 'sweetalert2';\nimport { useState ,useEffect } from \"react\";\nimport { Input } from \"reactstrap\";\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport { useAuthContext } from '../../shared/useAuthContext'; \nimport { useDataContext } from '../../hooks/useDataContext';\n \nconst Prof = () => {\n  const [searchtext,setsearchtext]=useState(\"\");\n  const [modal, setModal] = useState(false);\n  const [id, setId] = useState(null);\n  const [submitted, setSubmitted] = useState(null);\n\n  const { user } = useAuthContext()\n const { Data ,dispatch } = useDataContext()\n   const[ Json,setjson]=useState('')\n\n\n  const initialTutorialState = {\n    id: null,\n    Nom: \"\",\n    Info: \"\",\n    Email:\"\",\n\n    Image: \"\"\n    \n   \n  };\n  const [currentUser, setCurrentUser] = useState(initialTutorialState);\n\n  const [state,setState]=useState(false)\n  const[message,setMessage] =useState('');\n\n  const toggle = () => setModal(!modal);\n  const[result,setResult]=useState([])\n useEffect(() => {\n    const fetchData = async () => {\n \n        studentsService.getStudents().then(async res=>{\n        if(res){\n\n        \n            dispatch({type: 'SET_Data', payload: res.data})\n            setjson(res.data)\n        }\n\n      })\n      .catch({})\n    }\n\n \n      fetchData()\n    \n  }, [dispatch,state])\n  const Submit = event => {\n    event.preventDefault();\n    \n    // Upload the image to the server\n    const formData = new FormData();\n    formData.append('Image', currentUser.Image);\n    axios.post('http://localhost:5000/upload-image-student', formData)\n      .then(response => {\n        console.log(response.data.message);\n        // Add a new entry to the Prof table\n        const prof = { \n          Image: currentUser.Image,\n          Nom: currentUser.Nom,\n          Info: currentUser.Info,\n          Contact: currentUser.Contact,\n          Email: currentUser.Email\n        };\n        console.log(prof)\n        axios.post('http://localhost:5000/addstudent', prof)\n          .then(response => {\n            console.log(response.data.message);\n            // Update the list of entries from the Prof table\n            axios.get('http://localhost:5000/getstudent')\n              .then(response => {\n                console.log(response)\n                setMessage(\"The tutorial was updated successfully!\");\n                setSubmitted(true);\n                setState(!state)\n              })\n              .catch(error => {\n                console.log(error);\n              });\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  \n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n     const student ={Image:currentUser.Image,Nom:currentUser.Nom,Info:currentUser.Info,etudiantcol:currentUser.etudiantcol,Email:currentUser.Email}\n        \n     studentsService.save(student).then(res=>{ \n          if (res){\n            console.log(res)\n     \n        setMessage(\"The tutorial was updated successfully!\");\n        setSubmitted(true);\n        setState(!state)\n      }\n    else \n  {\n  }\n })\n \n  }\n\n\n\n const editt=(data,e)=>{\n   e.preventDefault();\n  toggle() ;\n  setId(data.id);\n  setCurrentUser(data)\n\n  console.log(data.id) \n} \n\n const update=async(e)=>{\n  e.preventDefault();\n  toggle() ;\n  e.preventDefault();\n  studentsService.updateStudent(id,currentUser).then(res=>{ \n  if (res){\n  Swal.fire({ \n   \n  text:   \"le profile est mis à jour avec succées\",\n  confirmButtonText: 'Cancel',\n  icon : \"success\" ,\n  confirmButtonColor:\"#979292 \"\n\n}) \nsetMessage(\"The tutorial was updated successfully!\");\nsetState(!state)\n}})\n   .catch(e => {\n     console.log(e);\n   \n   })\n \n\n\n} \n\nconst handleInputChange = event => {\n  const { name, value } = event.target;\n  setCurrentUser({ ...currentUser, [name]: value });\n};\n\n\nconst Delete=(id,e)=>{\n  console.log(id)\n  Swal.fire({\n           text:   \"Tu est sur de supprimer ce profil ?\",\n           icon: 'warning' ,\n           showCancelButton: true,  \n   confirmButtonText: `Yes`,  \n   confirmButtonColor: \"#ff6873\", \n       \n         }).then((result) => {\n           if (result.isConfirmed) {\n \n deletee(id,e) ;   \n Swal.fire({text:   \"profil supprimé avec succées\",\n icon: 'success' ,\n confirmButtonText: `OK`, \n confirmButtonColor: \"#ff6873\",\n })         \n           } else\n           Swal.fire({text:   \"Cancelled\",\n           icon: 'error' ,\n           confirmButtonText: `OK`, \n           confirmButtonColor: \"#ff6873\",\n     })\n \n       }) \n \n \n } \n const deletee =async(tdata,e)=>{\n\n  e.preventDefault();\n  studentsService.deleteStudent(tdata.id).then(res=>{\n    if(res){\n      dispatch({type: 'DELETE_Data', payload: tdata})\n      setState(!state)\n    }\n    \n  }).catch(e => {\n    console.log(e);\n  })\n\n} \n\n  return (\n    <div>\n     \n\n    <Row>\n    \n      <Col >\n\n      <Form className=\"navbar-search navbar-search-dark \" onSubmit={(e)=>{handleSubmit(e)}}>\n            <FormGroup className=\"mb-0\">\n              <div style={{borderRadius:30  ,marginTop:'10px',marginBottom:'10px',width:'300px',float:\"right\"}}>\n              <InputGroup className=\"input-group-alternative\">\n                <InputGroupText style={{backgroundColor:\"transparent\", borderColor:\"#7a7878\" }}>\n                 \n                  <AiOutlineSearch style={{color:\"#555555\"}} />\n                </InputGroupText>\n                <Input  placeholder=\"Search\" type=\"text\" style={{backgroundColor:\"transparent\", borderColor:\" #7a7878\"}}  onChange={(event)=>{setsearchtext(event.target.value)}} />\n              </InputGroup>\n              </div>\n            </FormGroup>\n       \n            <Card style ={{width:1500 ,marginLeft:'-40px'}} >\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n            <i className=\"bi bi-card-text me-2\"> </i>\n            Members\n          </CardTitle>\n          <CardBody style ={{width:1600}}>\n          <Row onSubmit={handleSubmit}>\n      <Col style={{marginLeft:'80px'}}>\n        <Label>Image:</Label>\n        <Input\n          type=\"text\"\n          name=\"Image\"\n          id=\"Image\"\n          value={currentUser.Image}\n          onChange={(e) => handleInputChange(e)} \n        />\n      </Col>\n      <Col>\n        <Label>Name:</Label>\n        <Input\n          type=\"text\"\n          name=\"Nom\"\n          id=\"Nom\"\n\n          value={currentUser.Nom}\n          onChange={(e) => handleInputChange(e)} style={{width:'250px'}}\n        />\n      </Col>\n      <Col>\n        <Label>Info:</Label>\n        <Input\n          type=\"text\"\n          name=\"Info\"\n          id=\"Info\"\n\n          value={currentUser.Info}\n          onChange={(e) => handleInputChange(e)} style={{width:'300px'}}\n        />\n      </Col>\n     \n      <Col >\n        <Label>email:</Label>\n        <Input\n          type=\"text\"\n          name=\"Email\"\n          id=\"Email\"\n\n          value={currentUser.Email}\n          onChange={(e) => handleInputChange(e)} style={{width:'250px'}}\n        />\n      </Col>\n       <Col>\n       <Button type=\"submit\" style={{borderRadius:30  ,marginTop:'35px',marginBottom:'10px',width:'70px',float:'flex-end'}}>OK</Button>\n\n      </Col>\n      \n    </Row>\n    </CardBody>\n    </Card>\n    </Form>\n\n    <Card style ={{width:1500 ,marginLeft:'-40px'}}>\n    <CardBody style ={{width:1550,marginLeft:'-40px'}}>\n\n            <Table className=\"no-wrap  align-left\"  responsive borderless >\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Image</th>\n                 \n                  <th>Name</th>\n                  <th>Info</th>\n                  <th>Email</th>\n\n                   \n\n                  { <th>Actions</th>}  \n                \n                </tr>\n              </thead>\n            \n              \n              <tbody>\n             {Json && Json.filter((val)=>{\n                if(searchtext===\"\")\n                return val ;\n                else if (val.name.toLowerCase().includes(searchtext.toLowerCase())){\n                  return val\n                }\n              }).map((tdata, index) => ( \n                    <tr key={index}>\n                  <td>{index+1}</td> \n                    \n               <td></td>\n                <td>{tdata && tdata.Nom}</td>\n            <td style={{width:400}}>{tdata && tdata.Info}</td>\n\n            <td >{tdata && tdata.Email}</td>\n\n\n            \n                      <td style={{width:\"250px\",float:\"right\"}}> <><Button className =\"edit\" id=\"b5\" style={{marginTop:-2 ,float:\"right\",alignItems: 'flex-end'}}  >\n                  <i className=\"bi bi-pencil-fill\" style ={{fontSize: 20+\"px\",color:\"yellow\"}}  onClick={(e)=>editt(tdata,e) }></i>\n                  \n                \n                </Button> \n              \n                <Button id =\"b4\"   onClick={(e)=>Delete(tdata,e)}     > \n                      <span className=\"trash\">\n                      <span></span>\n                        <i></i>\n            \n                      </span>\n                    </Button> </> \n                      \n                      \n                      \n                          </td> \n                      \n                          \n                      </tr> ))} \n                      </tbody> \n           \n  \n          \n            </Table>\n\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n    \n    <Modal isOpen={modal} toggle={toggle} {...result} className=\"Modal1\"  size=\"lg\" style={{maxWidth: '2000px', width: '100%'}}>\n    <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n    <ModalBody>\n    <form\n          id=\"form\"\n          action=\"/\"\n          method=\"POST\"\n        \n        >\n    <Table borderless>\n    <thead>\n                <tr>\n                  <th className =\"th\">Name</th>\n               \n                 \n                  <th>info</th>\n                  <th>email</th>\n                 \n\n                \n                  \n                </tr>\n              </thead>\n            \n            \n              <tbody>\n            \n        \n          <tr>\n            <td>\n\n              <div className='inline'>\n                <Row>\n                  <Col>\n\n                  <Input \n              placeholder=\" nom\"\n              type=\"string\"\n              name=\"Nom\" id=\"Nom\"\n              className=\"input-field\"\n              onChange={(e) => handleInputChange(e)}\n              value={currentUser.Nom}\n            />   </Col>  \n      \n\n                </Row>\n            \n          </div>\n            </td>\n            <td>\n \n            <Input  \n              placeholder=\"info\"\n              type=\"string\"\n              name=\"Info\"\n              id=\"Info\"\n              className=\"input-field\"\n              onChange={(e) => handleInputChange(e)}\n              value={currentUser.Info}\n            />\n       \n\n      \n          </td>\n            <td>\n \n <Input \n   placeholder=\"etudiantcol\"\n   type=\"string\"\n   name=\"Email\"\n   id=\"id\"\n   className=\"input-field\"\n   onChange={(e) => handleInputChange(e)}\n   value={currentUser.Email}\n   required\n > \n                </Input>  </td>\n\n           \n    \n\n\n       \n          </tr>\n    \n      \n                  </tbody>\n                  </Table>  \n                  <Button type=\"submit\" id=\"submit-button\"  onClick={e=>update(e)} >\n            submit\n          </Button>  \n        </form>\n    </ModalBody>\n    \n  </Modal>\n    \n  </div>\n  );\n};\n\nexport default Prof;\n\n\n */\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction UploadImage() {\n  const [image, setImage] = useState(null);\n  const [message, setMessage] = useState('');\n  const initialTutorialState = {\n    id: null,\n    Nom: \"\",\n    Info: \"\",\n    Contact: \"\",\n    Email:\"\",\n    Image: \"\"\n  };\n  const [currentUser, setCurrentUser] = useState(initialTutorialState);\n  \n  const handleImageChange = (event) => {\n    //setImage(event.target.files[0]);\n    setCurrentUser({ ...currentUser, Image: event.target.files[0] });\n\n  };\n\n  const handleUpload = async (event) => {\n    event.preventDefault();\n\n    \n\n    const formData = new FormData();\n    formData.append('image', currentUser.Image);\n\n   \n     await axios.post('/upload-image', formData)\n     .then(res=>\n      {setMessage(res.data['Done!'])\n      console.log(res);}\n      )\n    \n    \n  };\n\n  return (\n    <div>\n      <form onSubmit={handleUpload}>\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default UploadImage; "],"mappingsvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMO,oBAAoB,GAAG;IAC3BC,EAAE,EAAE,IAAI;IACRC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAC,EAAE;IACRC,KAAK,EAAE;EACT,CAAC;EACD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAACO,oBAAoB,CAAC;EAEpE,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnC;IACAF,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAED,KAAK,EAAEI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;IAAE,CAAC,CAAC;EAElE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,EAAE;IAItB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEV,WAAW,CAACD,KAAK,CAAC;IAG1C,MAAMZ,KAAK,CAACwB,IAAI,CAAC,eAAe,EAAEH,QAAQ,CAAC,CAC1CI,IAAI,CAACC,GAAG,IACR;MAACrB,UAAU,CAACqB,GAAG,CAACC,IAAI,CAAC,OAAO,CAAC,CAAC;MAC9BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAAC,CAAC,CACjB;EAGL,CAAC;EAED,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEP,YAAa;MAAA,wBAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,MAAM,EAAC,SAAS;QAAC,QAAQ,EAAEJ;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG,eACnE;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC,EACNX,OAAO,iBAAI;MAAA,UAAIA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEV;AAAC,GA9CQH,WAAW;AAAA,KAAXA,WAAW;AAgDpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}