{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseFilter = void 0;\nclass BaseFilter {\n  async sendMetadata(metadata) {\n    return metadata;\n  }\n  receiveMetadata(metadata) {\n    return metadata;\n  }\n  async sendMessage(message) {\n    return message;\n  }\n  async receiveMessage(message) {\n    return message;\n  }\n  receiveTrailers(status) {\n    return status;\n  }\n}\nexports.BaseFilter = BaseFilter;","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAsCA,MAAsBA,UAAU;EAC9B,MAAMC,YAAY,CAACC,QAA2B;IAC5C,OAAOA,QAAQ;EACjB;EAEAC,eAAe,CAACD,QAAkB;IAChC,OAAOA,QAAQ;EACjB;EAEA,MAAME,WAAW,CAACC,OAA6B;IAC7C,OAAOA,OAAO;EAChB;EAEA,MAAMC,cAAc,CAACD,OAAwB;IAC3C,OAAOA,OAAO;EAChB;EAEAE,eAAe,CAACC,MAAoB;IAClC,OAAOA,MAAM;EACf;;AAnBFC","names":["BaseFilter","sendMetadata","metadata","receiveMetadata","sendMessage","message","receiveMessage","receiveTrailers","status","exports"],"sources":["/home/achwak/node_modules/@grpc/grpc-js/src/filter.ts"],"sourcesContent":["/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { StatusObject, WriteObject } from './call-interface';\nimport { Metadata } from './metadata';\n\n/**\n * Filter classes represent related per-call logic and state that is primarily\n * used to modify incoming and outgoing data. All async filters can be\n * rejected. The rejection error must be a StatusObject, and a rejection will\n * cause the call to end with that status.\n */\nexport interface Filter {\n  sendMetadata(metadata: Promise<Metadata>): Promise<Metadata>;\n\n  receiveMetadata(metadata: Metadata): Metadata;\n\n  sendMessage(message: Promise<WriteObject>): Promise<WriteObject>;\n\n  receiveMessage(message: Promise<Buffer>): Promise<Buffer>;\n\n  receiveTrailers(status: StatusObject): StatusObject;\n}\n\nexport abstract class BaseFilter implements Filter {\n  async sendMetadata(metadata: Promise<Metadata>): Promise<Metadata> {\n    return metadata;\n  }\n\n  receiveMetadata(metadata: Metadata): Metadata {\n    return metadata;\n  }\n\n  async sendMessage(message: Promise<WriteObject>): Promise<WriteObject> {\n    return message;\n  }\n\n  async receiveMessage(message: Promise<Buffer>): Promise<Buffer> {\n    return message;\n  }\n\n  receiveTrailers(status: StatusObject): StatusObject {\n    return status;\n  }\n}\n\nexport interface FilterFactory<T extends Filter> {\n  createFilter(): T;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}