{"ast":null,"code":"var _jsxFileName = \"/home/achwak/Desktop/SchoolAssistant-pcd-project/UI/src/views/g\\xE9n\\xE9ral.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Button, Label, Form, FormGroup, CustomInput, Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Général() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  /* \n    const handleSpeechRecognition =  useCallback(() => {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = \"fr-FR\";\n  \n      recognition.onstart = () => {\n        console.log(\"Speech recognition started\");\n      };\n  \n      recognition.onresult = (event) => {\n        let interimTranscript = \"\";\n        let finalTranscript = \"\";\n  \n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcript = event.results[i][0].transcript;\n  \n          if (event.results[i].isFinal) {\n            finalTranscript += transcript;\n          } else {\n            interimTranscript += transcript;\n          }\n        }\n  \n        setMessage(finalTranscript);\n      };\n  \n      recognition.onerror = (event) => {\n        console.error(event.error);\n      };\n  \n      recognition.onend = () => {\n        console.log(\"Speech recognition ended\");\n        handleSpeechRecognition();\n      };\n  \n      recognition.start();\n    },[]); */\n\n  const handleSubmit = useCallback(async () => {\n    if (message) {\n      // Send the message to your Flask backend\n      const response = await fetch(\"http://localhost:5000/answerprof\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      setAnswer(data.answer);\n    }\n  }, [message]);\n  useEffect(() => {\n    handleSpeechRecognition();\n  }, [handleSpeechRecognition]);\n  useEffect(() => {\n    const timeoutId = setTimeout(handleSubmit, 4000);\n    return () => clearTimeout(timeoutId);\n  }, [handleSubmit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: \"80px\"\n      },\n      children: \"ESPACE Professeur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sp\\xE9cifier precisemment votre choix:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form\n      /*  onSubmit={handleSubmit} */\n      , {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: message,\n          onChange: event => setMessage(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Général, \"znBg31gwS4rhz+kxTgRXWwoYLVk=\");\n\n_c = Général;\n\nvar _c;\n\n$RefreshReg$(_c, \"G\\xE9n\\xE9ral\");","map":{"version":3,"names":["useState","useEffect","useCallback","Button","Label","Form","FormGroup","CustomInput","Input","Général","message","setMessage","answer","setAnswer","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","handleSpeechRecognition","timeoutId","setTimeout","clearTimeout","marginTop","event","target","value"],"sources":["/home/achwak/Desktop/SchoolAssistant-pcd-project/UI/src/views/général.js"],"sourcesContent":["import { useState, useEffect , useCallback} from \"react\";\n\nimport {\n  Button,\n  Label,\nForm,\n  FormGroup,\n  CustomInput,\n  Input\n\n} from \"reactstrap\";\n\nexport default function Général() {\n  const [message, setMessage] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\")\n/* \n  const handleSpeechRecognition =  useCallback(() => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = \"fr-FR\";\n\n    recognition.onstart = () => {\n      console.log(\"Speech recognition started\");\n    };\n\n    recognition.onresult = (event) => {\n      let interimTranscript = \"\";\n      let finalTranscript = \"\";\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript;\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n\n      setMessage(finalTranscript);\n    };\n\n    recognition.onerror = (event) => {\n      console.error(event.error);\n    };\n\n    recognition.onend = () => {\n      console.log(\"Speech recognition ended\");\n      handleSpeechRecognition();\n    };\n\n    recognition.start();\n  },[]); */\n\n \n  const handleSubmit = useCallback(async () => {\n    if (message) {\n    // Send the message to your Flask backend\n    const response = await fetch(\"http://localhost:5000/answerprof\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ message }),\n    });\n  \n    const data = await response.json();\n    console.log(data);\n    setAnswer(data.answer)}\n  \n  }, [message]);\n\n  useEffect(() => {\n    handleSpeechRecognition();\n  }, [handleSpeechRecognition]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(handleSubmit, 4000);\n    return () => clearTimeout(timeoutId);\n  }, [handleSubmit]);\n  return (\n    <div>\n      <h1 style={{ marginTop: \"80px\" }}>ESPACE Professeur</h1>\n      <h2>Spécifier precisemment votre choix:</h2>\n      <div>\n      <Form /*  onSubmit={handleSubmit} */>\n        <Input\n          type=\"text\"\n          value={message}\n          onChange={(event) => setMessage(event.target.value)}\n        />\n       \n     \n      <Input\n          type=\"text\"\n          value={answer}\n        />  \n         <Button type=\"submit\">Send</Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\n\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA+BC,WAA/B,QAAiD,OAAjD;AAEA,SACEC,MADF,EAEEC,KAFF,EAGAC,IAHA,EAIEC,SAJF,EAKEC,WALF,EAMEC,KANF,QAQO,YARP;;AAUA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAChC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;EACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,MAAMc,YAAY,GAAGZ,WAAW,CAAC,YAAY;IAC3C,IAAIQ,OAAJ,EAAa;MACb;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;QAC/DC,MAAM,EAAE,MADuD;QAE/DC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFsD;QAK/DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAEX;QAAF,CAAf;MALyD,CAArC,CAA5B;MAQA,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;MACAT,SAAS,CAACS,IAAI,CAACV,MAAN,CAAT;IAAuB;EAExB,CAf+B,EAe7B,CAACF,OAAD,CAf6B,CAAhC;EAiBAT,SAAS,CAAC,MAAM;IACdyB,uBAAuB;EACxB,CAFQ,EAEN,CAACA,uBAAD,CAFM,CAAT;EAIAzB,SAAS,CAAC,MAAM;IACd,MAAM0B,SAAS,GAAGC,UAAU,CAACd,YAAD,EAAe,IAAf,CAA5B;IACA,OAAO,MAAMe,YAAY,CAACF,SAAD,CAAzB;EACD,CAHQ,EAGN,CAACb,YAAD,CAHM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAI,KAAK,EAAE;QAAEgB,SAAS,EAAE;MAAb,CAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,uBACA,QAAC;MAAK;MAAN;QAAA,wBACE,QAAC,KAAD;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAEpB,OAFT;UAGE,QAAQ,EAAGqB,KAAD,IAAWpB,UAAU,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd;QAHjC;UAAA;UAAA;UAAA;QAAA,QADF,eAQA,QAAC,KAAD;UACI,IAAI,EAAC,MADT;UAEI,KAAK,EAAErB;QAFX;UAAA;UAAA;UAAA;QAAA,QARA,eAYG,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAZH;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GA3FuBH,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}