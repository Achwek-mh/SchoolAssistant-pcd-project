{"ast":null,"code":"var _jsxFileName = \"/home/achwak/Desktop/SchoolAssistant-pcd-project/UI/src/views/profils/etud.js\",\n    _s = $RefreshSig$();\n\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { Button, Label, FormGroup, CustomInput, Input, InputGroupAddon, InputGroupText, InputGroup, Container, Row, Col } from \"reactstrap\";\nimport \"assets/css/nucleo-icons.css\";\nimport \"assets/scss/blk-design-system-react.scss\";\nimport \"assets/demo/demo.css\"; // reactstrap components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Etud() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const handleSpeechRecognition = useCallback(() => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = \"fr-FR\";\n\n    recognition.onstart = () => {\n      console.log(\"Speech recognition started\");\n    };\n\n    recognition.onresult = event => {\n      let interimTranscript = \"\";\n      let finalTranscript = \"\";\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript;\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n\n      setMessage(finalTranscript);\n    };\n\n    recognition.onerror = event => {\n      console.error(event.error);\n    };\n\n    recognition.onend = () => {\n      console.log(\"Speech recognition ended\");\n      handleSpeechRecognition();\n    };\n\n    recognition.start();\n  }, []);\n  const handleSubmit = useCallback(async () => {\n    if (message) {\n      // Send the message to your Flask backend\n      const response = await fetch(\"http://localhost:5000/answerprof\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      setAnswer(data.answer);\n    }\n  }, [message]);\n  useEffect(() => {\n    handleSpeechRecognition();\n  }, [handleSpeechRecognition]);\n  useEffect(() => {\n    const timeoutId = setTimeout(handleSubmit, 1500);\n    return () => clearTimeout(timeoutId);\n  }, [handleSubmit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: '80px'\n      },\n      children: \"ESPace Etudiant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sp\\xE9cifier precisemment votre choix:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: event => setMessage(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleSpeechRecognition(e),\n          children: \"Speak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Answer: \", answer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Etud, \"55O39zyK7iBUAymc454AJVLJ3I4=\");\n\n_c = Etud;\n\nvar _c;\n\n$RefreshReg$(_c, \"Etud\");","map":{"version":3,"names":["Routes","Route","useNavigate","useState","useEffect","React","Button","Label","FormGroup","CustomInput","Input","InputGroupAddon","InputGroupText","InputGroup","Container","Row","Col","Etud","message","setMessage","answer","setAnswer","handleSpeechRecognition","useCallback","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","onstart","console","log","onresult","event","interimTranscript","finalTranscript","i","resultIndex","results","length","transcript","isFinal","onerror","error","onend","start","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","timeoutId","setTimeout","clearTimeout","marginTop","target","value","e"],"sources":["/home/achwak/Desktop/SchoolAssistant-pcd-project/UI/src/views/profils/etud.js"],"sourcesContent":["import { Routes , Route , useNavigate } from \"react-router-dom\";\nimport { useState ,useEffect } from \"react\";\n\nimport React from \"react\";\nimport {\n  Button,\n  Label,\n  FormGroup,\n  CustomInput,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\nimport \"assets/css/nucleo-icons.css\";\nimport \"assets/scss/blk-design-system-react.scss\";\nimport \"assets/demo/demo.css\";\n// reactstrap components\n\nexport default function Etud() {\n\n  const [message, setMessage] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\")\n\n  const handleSpeechRecognition =  useCallback(() => {\n    \n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = \"fr-FR\";\n\n    recognition.onstart = () => {\n      console.log(\"Speech recognition started\");\n    };\n\n    recognition.onresult = (event) => {\n      let interimTranscript = \"\";\n      let finalTranscript = \"\";\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript;\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n\n      setMessage(finalTranscript);\n    };\n\n    recognition.onerror = (event) => {\n      console.error(event.error);\n    };\n\n    recognition.onend = () => {\n      console.log(\"Speech recognition ended\");\n      handleSpeechRecognition();\n    };\n\n    recognition.start();\n  },[]);\n\n \n  const handleSubmit = useCallback(async () => {\n    if (message) {\n    // Send the message to your Flask backend\n    const response = await fetch(\"http://localhost:5000/answerprof\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ message }),\n    });\n  \n    const data = await response.json();\n    console.log(data);\n    setAnswer(data.answer)}\n  \n  }, [message]);\n\n  useEffect(() => {\n    handleSpeechRecognition();\n  }, [handleSpeechRecognition]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(handleSubmit, 1500);\n    return () => clearTimeout(timeoutId);\n  }, [handleSubmit]);\n  return (\n   <div>\n\n    <h1 style={{marginTop:'80px'}}>ESPace Etudiant</h1>\n    <h2>Sp√©cifier precisemment votre choix:</h2>\n    <div>\n    <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(event) => setMessage(event.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n        <button onClick={(e)=>handleSpeechRecognition(e)}>Speak</button>\n      </form>\n      <p>Answer: {answer}</p>\n    </div>\n             \n   </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAkBC,KAAlB,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,eANF,EAOEC,cAPF,EAQEC,UARF,EASEC,SATF,EAUEC,GAVF,EAWEC,GAXF,QAYO,YAZP;AAaA,OAAO,6BAAP;AACA,OAAO,0CAAP;AACA,OAAO,sBAAP,C,CACA;;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAE7B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;EAEA,MAAMmB,uBAAuB,GAAIC,WAAW,CAAC,MAAM;IAEjD,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAACC,uBAAX,EAApB;IACAF,WAAW,CAACG,UAAZ,GAAyB,IAAzB;IACAH,WAAW,CAACI,cAAZ,GAA6B,IAA7B;IACAJ,WAAW,CAACK,IAAZ,GAAmB,OAAnB;;IAEAL,WAAW,CAACM,OAAZ,GAAsB,MAAM;MAC1BC,OAAO,CAACC,GAAR,CAAY,4BAAZ;IACD,CAFD;;IAIAR,WAAW,CAACS,QAAZ,GAAwBC,KAAD,IAAW;MAChC,IAAIC,iBAAiB,GAAG,EAAxB;MACA,IAAIC,eAAe,GAAG,EAAtB;;MAEA,KAAK,IAAIC,CAAC,GAAGH,KAAK,CAACI,WAAnB,EAAgCD,CAAC,GAAGH,KAAK,CAACK,OAAN,CAAcC,MAAlD,EAA0DH,CAAC,EAA3D,EAA+D;QAC7D,MAAMI,UAAU,GAAGP,KAAK,CAACK,OAAN,CAAcF,CAAd,EAAiB,CAAjB,EAAoBI,UAAvC;;QAEA,IAAIP,KAAK,CAACK,OAAN,CAAcF,CAAd,EAAiBK,OAArB,EAA8B;UAC5BN,eAAe,IAAIK,UAAnB;QACD,CAFD,MAEO;UACLN,iBAAiB,IAAIM,UAArB;QACD;MACF;;MAEDtB,UAAU,CAACiB,eAAD,CAAV;IACD,CAfD;;IAiBAZ,WAAW,CAACmB,OAAZ,GAAuBT,KAAD,IAAW;MAC/BH,OAAO,CAACa,KAAR,CAAcV,KAAK,CAACU,KAApB;IACD,CAFD;;IAIApB,WAAW,CAACqB,KAAZ,GAAoB,MAAM;MACxBd,OAAO,CAACC,GAAR,CAAY,0BAAZ;MACAV,uBAAuB;IACxB,CAHD;;IAKAE,WAAW,CAACsB,KAAZ;EACD,CAtC2C,EAsC1C,EAtC0C,CAA5C;EAyCA,MAAMC,YAAY,GAAGxB,WAAW,CAAC,YAAY;IAC3C,IAAIL,OAAJ,EAAa;MACb;MACA,MAAM8B,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;QAC/DC,MAAM,EAAE,MADuD;QAE/DC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFsD;QAK/DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAEpC;QAAF,CAAf;MALyD,CAArC,CAA5B;MAQA,MAAMqC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;MACAzB,OAAO,CAACC,GAAR,CAAYuB,IAAZ;MACAlC,SAAS,CAACkC,IAAI,CAACnC,MAAN,CAAT;IAAuB;EAExB,CAf+B,EAe7B,CAACF,OAAD,CAf6B,CAAhC;EAiBAd,SAAS,CAAC,MAAM;IACdkB,uBAAuB;EACxB,CAFQ,EAEN,CAACA,uBAAD,CAFM,CAAT;EAIAlB,SAAS,CAAC,MAAM;IACd,MAAMqD,SAAS,GAAGC,UAAU,CAACX,YAAD,EAAe,IAAf,CAA5B;IACA,OAAO,MAAMY,YAAY,CAACF,SAAD,CAAzB;EACD,CAHQ,EAGN,CAACV,YAAD,CAHM,CAAT;EAIA,oBACC;IAAA,wBAEC;MAAI,KAAK,EAAE;QAACa,SAAS,EAAC;MAAX,CAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD,eAGC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHD,eAIC;MAAA,wBACA;QAAM,QAAQ,EAAEb,YAAhB;QAAA,wBACI;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAE7B,OAFT;UAGE,QAAQ,EAAGgB,KAAD,IAAWf,UAAU,CAACe,KAAK,CAAC2B,MAAN,CAAaC,KAAd;QAHjC;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ,eAOI;UAAQ,OAAO,EAAGC,CAAD,IAAKzC,uBAAuB,CAACyC,CAAD,CAA7C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAUE;QAAA,uBAAY3C,MAAZ;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAoBD;;GA3FuBH,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}