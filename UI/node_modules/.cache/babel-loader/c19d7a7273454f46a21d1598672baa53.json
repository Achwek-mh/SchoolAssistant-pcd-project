{"ast":null,"code":"var _jsxFileName = \"/home/achwak/Desktop/SchoolAssistant-pcd-project/UI/src/views/etud.js\",\n    _s = $RefreshSig$();\n\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { Button, Label, FormGroup, CustomInput, Input, InputGroupAddon, InputGroupText, InputGroup, Container, Row, Col } from \"reactstrap\";\nimport \"assets/css/nucleo-icons.css\";\nimport \"assets/scss/blk-design-system-react.scss\";\nimport \"assets/demo/demo.css\"; // reactstrap components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Prof() {\n  _s();\n\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  const handleQuestionChange = event => {\n    setQuestion(event.target.value);\n  };\n  /*    const handleSubmit = (event) => {\n         event.preventDefault();\n         fetch('http://localhost:5000/answer', {\n           method: 'POST',\n           headers: { 'Content-Type': 'application/json' },\n           body: JSON.stringify({ question }),\n         })\n           .then((response) => response.json())\n           .then((data) => {\n             setAnswer(data.answer);\n           })\n           .catch((error) => console.error(error));\n       }; */\n\n\n  const [message, setMessage] = useState(\"\");\n\n  const handleSpeechRecognition = e => {\n    e.preventDefault();\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.lang = \"fr-FR\";\n\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      console.log(transcript);\n      setMessage(transcript);\n    };\n\n    recognition.start();\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // Send the message to your Flask backend\n\n    const response = await fetch(\"http://localhost:5000/answeretud\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n    setAnswer(data.answer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: '80px'\n      },\n      children: \"ESPACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sp\\xE9cifier precisemment votre choix:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: event => setMessage(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleSpeechRecognition(e),\n          children: \"Speak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Answer: \", answer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Prof, \"SeNftiF1uJ5RCMSH1q55iv7b4as=\");\n\n_c = Prof;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prof\");","map":{"version":3,"names":["Routes","Route","useNavigate","useState","useEffect","React","Button","Label","FormGroup","CustomInput","Input","InputGroupAddon","InputGroupText","InputGroup","Container","Row","Col","Prof","question","setQuestion","answer","setAnswer","handleQuestionChange","event","target","value","message","setMessage","handleSpeechRecognition","e","preventDefault","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","onresult","transcript","results","console","log","start","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","marginTop"],"sources":["/home/achwak/Desktop/SchoolAssistant-pcd-project/UI/src/views/etud.js"],"sourcesContent":["import { Routes , Route , useNavigate } from \"react-router-dom\";\nimport { useState ,useEffect } from \"react\";\n\nimport React from \"react\";\nimport {\n  Button,\n  Label,\n  FormGroup,\n  CustomInput,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\nimport \"assets/css/nucleo-icons.css\";\nimport \"assets/scss/blk-design-system-react.scss\";\nimport \"assets/demo/demo.css\";\n// reactstrap components\n\nexport default function Prof() {\n\n    const [question, setQuestion] = useState('');\n    const [answer, setAnswer] = useState('')\n  \n    const handleQuestionChange = (event) => {\n      setQuestion(event.target.value);\n    };\n /*    const handleSubmit = (event) => {\n        event.preventDefault();\n        fetch('http://localhost:5000/answer', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ question }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            setAnswer(data.answer);\n          })\n          .catch((error) => console.error(error));\n      }; */\n   \n      const [message, setMessage] = useState(\"\");\n\n      const handleSpeechRecognition = (e) => {\n        e.preventDefault()\n        const recognition = new window.webkitSpeechRecognition();\n        recognition.continuous = false;\n        recognition.interimResults = false;\n        recognition.lang = \"fr-FR\";\n    \n        recognition.onresult = (event) => {\n          const transcript = event.results[0][0].transcript;\n          console.log(transcript);\n          setMessage(transcript);\n        };\n    \n        recognition.start();\n      };\n    \n      const handleSubmit = async (event) => {\n        event.preventDefault()\n\n        // Send the message to your Flask backend\n        const response = await fetch(\"http://localhost:5000/answeretud\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ message }),\n        });\n      \n        const data = await response.json();\n        console.log(data);\n        setAnswer(data.answer)\n      \n      }\n  return (\n   <div>\n\n    <h1 style={{marginTop:'80px'}}>ESPACE</h1>\n    <h2>Sp√©cifier precisemment votre choix:</h2>\n    <div>\n    <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(event) => setMessage(event.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n        <button onClick={(e)=>handleSpeechRecognition(e)}>Speak</button>\n      </form>\n      <p>Answer: {answer}</p>\n    </div>\n             \n   </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}