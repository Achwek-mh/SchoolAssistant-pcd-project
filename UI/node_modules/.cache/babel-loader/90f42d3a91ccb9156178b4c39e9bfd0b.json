{"ast":null,"code":"var _jsxFileName = \"/home/achwak/Desktop/SchoolAssistant-pcd-project/UI/src/views/face.js\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Webcam from 'react-webcam';\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Button, Label, Form, CustomInput, Input, InputGroupAddon, InputGroupText, InputGroup, Container, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Face() {\n  /*  const handleSpeechRecognition =() => {\n   \n   const recognition = new window.webkitSpeechRecognition();\n   recognition.continuous = true;\n   recognition.interimResults = true;\n   recognition.lang = \"fr-FR\";\n    recognition.onstart = () => {\n     console.log(\"Speech recognition started\");\n   };\n    recognition.onresult = (event) => {\n     let interimTranscript = \"\";\n     let finalTranscript = \"\";\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n       const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n         finalTranscript += transcript;\n       } else {\n         interimTranscript += transcript;\n       }\n     }\n      setMessage(finalTranscript);\n     console.log(finalTranscript)\n         settoken(true)\n    };\n    recognition.onerror = (event) => {\n     console.error(event.error);\n   };\n    recognition.onend = () => {\n     console.log(\"Speech recognition ended\");\n     handleSpeechRecognition();\n   };\n    recognition.start();\n  };\n  const navigatetoprof=()=>{\n  navigate('/')\n  }\n   const webcamRef = useRef(null);\n   const [name, setName] = useState(null);\n   const [message, setMessage] = useState(\"\");\n    const [logged_in, setlogged_in] = useState(false);\n   const [token, settoken] = useState(false);\n    const navigate = useNavigate();\n   const capture = async () => {\n   const imageSrc = webcamRef.current.getScreenshot();\n   if (!imageSrc) {\n     console.log(\"dfgf\")\n     return;\n   }\n   const formData = new FormData();\n   formData.append('image', imageSrc);\n  if(message==='identifier moi')\n     fetch('http://localhost:5000/login', {\n       method: 'POST',\n    \n       body:\n         formData        \n     })\n       .then((response) =>{ \n         console.log(response)\n         setName(response.statusText)\n       setlogged_in(true)\n       if (response!== (null || \"You are unknown\")){\n       setTimeout((i) => {\n        navigatetoprof(true);\n      }, 5000);\n     }\n     })\n       \n    \n     .catch(error => {\n       console.error(error);\n     });\n    }\n  useEffect(() => {\n   if (name!== (null || \"You are unknown\")){\n  const timerId = setInterval(() => {\n  setTimeLeft(prevTimeLeft => prevTimeLeft - 1);\n  }, 1000);\n  return () => clearInterval(timerId);}\n  }, []);\n  const [timeLeft, setTimeLeft] = useState(8);\n  useEffect(() => {\n  capture()\n  handleSpeechRecognition()\n  }, [message]);\n  */\n  const sub = async () => {\n    const formData = new FormData();\n    formData.append('image', \"hello\");\n    const response = await fetch(\"http://localhost:5000/reg\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: formData\n    });\n  };\n\n  console.log(logged_in);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-header header-filter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-center brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: sub,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [logged_in === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Webcam, {\n                audio: false,\n                ref: webcamRef,\n                screenshotFormat: \"image/jpeg\",\n                width: 640,\n                height: 480\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Authenticate Me\",\n                  onClick: () => {\n                    capture();\n                  },\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: name !== (null || \"You are unknown\") ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: [\"Hello \", name, \" !\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: [\"You are successfully logged in to the system. you will be redirected after :\", logged_in && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: timeLeft\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 63\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: \"                  \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\\"unknown\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 9\n            }, this), \"  \"]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_c = Face;\n\nvar _c;\n\n$RefreshReg$(_c, \"Face\");","map":{"version":3,"names":["Routes","Route","useNavigate","axios","Webcam","React","useState","useEffect","useRef","useCallback","Button","Label","Form","CustomInput","Input","InputGroupAddon","InputGroupText","InputGroup","Container","Row","Col","Face","sub","formData","FormData","append","response","fetch","method","headers","body","console","log","logged_in","webcamRef","capture","name","timeLeft"],"sources":["/home/achwak/Desktop/SchoolAssistant-pcd-project/UI/src/views/face.js"],"sourcesContent":["import { Routes , Route , useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Webcam from 'react-webcam';\nimport React, { useState, useEffect, useRef,useCallback } from \"react\";\nimport {\n  Button,\n  Label,\n  Form,\n  CustomInput,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\nexport default function Face ()  {\n   /*  const handleSpeechRecognition =() => {\n    \n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = \"fr-FR\";\n\n    recognition.onstart = () => {\n      console.log(\"Speech recognition started\");\n    };\n\n    recognition.onresult = (event) => {\n      let interimTranscript = \"\";\n      let finalTranscript = \"\";\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript;\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n\n      setMessage(finalTranscript);\n      console.log(finalTranscript)\n          settoken(true)\n\n    };\n\n    recognition.onerror = (event) => {\n      console.error(event.error);\n    };\n\n    recognition.onend = () => {\n      console.log(\"Speech recognition ended\");\n      handleSpeechRecognition();\n    };\n\n    recognition.start();\n  };\n  const navigatetoprof=()=>{\n  navigate('/')\n}\n    const webcamRef = useRef(null);\n    const [name, setName] = useState(null);\n    const [message, setMessage] = useState(\"\");\n\n    const [logged_in, setlogged_in] = useState(false);\n    const [token, settoken] = useState(false);\n\n    const navigate = useNavigate();\n    const capture = async () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (!imageSrc) {\n      console.log(\"dfgf\")\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', imageSrc);\n   if(message==='identifier moi')\n      fetch('http://localhost:5000/login', {\n        method: 'POST',\n     \n        body:\n          formData        \n      })\n        .then((response) =>{ \n          console.log(response)\n          setName(response.statusText)\n        setlogged_in(true)\n        if (response!== (null || \"You are unknown\")){\n        setTimeout((i) => {\n         navigatetoprof(true);\n       }, 5000);\n      }\n      })\n        \n     \n      .catch(error => {\n        console.error(error);\n      });\n  \n  }\nuseEffect(() => {\n    if (name!== (null || \"You are unknown\")){\n const timerId = setInterval(() => {\n   setTimeLeft(prevTimeLeft => prevTimeLeft - 1);\n }, 1000);\n\n return () => clearInterval(timerId);}\n}, []);\n\nconst [timeLeft, setTimeLeft] = useState(8);\n\n\n\nuseEffect(() => {\n   capture()\n   handleSpeechRecognition()\n  }, [message]);\n */\n  const sub = async () => {\n    const formData = new FormData();\n    formData.append('image', \"hello\");\n    const response = await fetch(\"http://localhost:5000/reg\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: formData,\n    });\n\n\n  }; \nconsole.log(logged_in)\n  return (\n    <div className=\"page-header header-filter\">\n    <div className=\"wrapper\">\n  <div className=\"page-header\">\n  <div className=\"content-center\">\n\n    \n      <div className=\"content-center brand\" ></div>\n      <Form  onSubmit={sub} >\n        \n         <Button type=\"submit\">Send</Button>\n        </Form>\n\n    <>\n        {logged_in === false ?\n        <>\n          <Webcam\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width={640}\n        height={480}\n      />\n        <div className=\"form-group\"  >\n            <input type=\"submit\" value=\"Authenticate Me\" onClick={()=>{capture()}} className=\"btn btn-primary\" />\n        </div>\n     \n        </>\n        :\n        <div>\n\n           {name !== (null || \"You are unknown\") ?\n        <>\n            <div className=\"details\">\n                <h1>Hello {name} !</h1>\n                <br />\n                \n                <h1>You are successfully logged in to the system.\n                  you will be redirected after :{logged_in && <p>{timeLeft}</p>} \n            </h1>\n                <div className=\"form-group\">\n{/*                       <input type=\"submit\" value=\"Logout\" onClick={()=>{this.setState({msg:null,logged_in:false})}} className=\"btn btn-primary\" />\n*/}                  </div>  \n            </div>\n            </>\n        :\n        <div>\n          <p>\"unknown\"</p>\n        </div>\n        }\n        </div>\n        \n        }  </>\n        \n \n  </div>\n  </div>\n  </div>\n  </div>\n   \n   \n)\n}\n \n\n\n\n\n"],"mappings":";AAAA,SAASA,MAAT,EAAkBC,KAAlB,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA4CC,WAA5C,QAA+D,OAA/D;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,eANF,EAOEC,cAPF,EAQEC,UARF,EASEC,SATF,EAUEC,GAVF,EAWEC,GAXF,QAYO,YAZP;;;AAaA,eAAe,SAASC,IAAT,GAAkB;EAC9B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAkBE,MAAMC,GAAG,GAAG,YAAY;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,OAAzB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;MACxDC,MAAM,EAAE,MADgD;MAExDC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF+C;MAKxDC,IAAI,EAAEP;IALkD,CAA9B,CAA5B;EASD,CAZD;;EAaFQ,OAAO,CAACC,GAAR,CAAYC,SAAZ;EACE,oBACE;IAAK,SAAS,EAAC,2BAAf;IAAA,uBACA;MAAK,SAAS,EAAC,SAAf;MAAA,uBACF;QAAK,SAAS,EAAC,aAAf;QAAA,uBACA;UAAK,SAAS,EAAC,gBAAf;UAAA,wBAGI;YAAK,SAAS,EAAC;UAAf;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII,QAAC,IAAD;YAAO,QAAQ,EAAEX,GAAjB;YAAA,uBAEG,QAAC,MAAD;cAAQ,IAAI,EAAC,QAAb;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAFH;YAAA;YAAA;YAAA;UAAA,QAJJ,eASE;YAAA,WACKW,SAAS,KAAK,KAAd,gBACD;cAAA,wBACE,QAAC,MAAD;gBACF,KAAK,EAAE,KADL;gBAEF,GAAG,EAAEC,SAFH;gBAGF,gBAAgB,EAAC,YAHf;gBAIF,KAAK,EAAE,GAJL;gBAKF,MAAM,EAAE;cALN;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAQA;gBAAK,SAAS,EAAC,YAAf;gBAAA,uBACI;kBAAO,IAAI,EAAC,QAAZ;kBAAqB,KAAK,EAAC,iBAA3B;kBAA6C,OAAO,EAAE,MAAI;oBAACC,OAAO;kBAAG,CAArE;kBAAuE,SAAS,EAAC;gBAAjF;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QARA;YAAA,gBADC,gBAeD;cAAA,UAEIC,IAAI,MAAM,QAAQ,iBAAd,CAAJ,gBACJ;gBAAA,uBACI;kBAAK,SAAS,EAAC,SAAf;kBAAA,wBACI;oBAAA,qBAAWA,IAAX;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAEI;oBAAA;oBAAA;oBAAA;kBAAA,QAFJ,eAII;oBAAA,2FACiCH,SAAS,iBAAI;sBAAA,UAAII;oBAAJ;sBAAA;sBAAA;sBAAA;oBAAA,QAD9C;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAJJ,eAOI;oBAAK,SAAS,EAAC,YAAf;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAPJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADJ,iBADI,gBAeJ;gBAAA,uBACE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA;YAjBA;cAAA;cAAA;cAAA;YAAA,QAhBJ;UAAA,gBATF;QAAA;UAAA;UAAA;UAAA;QAAA;MADA;QAAA;QAAA;QAAA;MAAA;IADE;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AA8DD;KApLuBhB,I"},"metadata":{},"sourceType":"module"}